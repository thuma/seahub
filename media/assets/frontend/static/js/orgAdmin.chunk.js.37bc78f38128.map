{"version":3,"sources":["pages/org-admin/side-panel.js","pages/org-admin/org-users-nav.js","components/select-editor/user-status-editor.js","pages/org-admin/org-user-item.js","pages/org-admin/org-users-list.js","pages/org-admin/main-panel-topbar.js","components/dialog/org-add-user-dialog.js","components/dialog/org-admin-invite-user-dialog.js","models/org-user.js","pages/org-admin/org-users-users.js","pages/org-admin/org-admin-list.js","components/dialog/org-add-admin-dialog.js","pages/org-admin/org-users-admins.js","components/org-admin-user-nav.js","components/dialog/set-org-user-name.js","components/dialog/set-org-user-contact-email.js","components/dialog/set-org-user-quota.js","pages/org-admin/org-user-profile.js","pages/org-admin/org-user-repos.js","pages/org-admin/org-user-shared-repos.js","models/org-group.js","pages/org-admin/org-groups.js","components/org-admin-group-nav.js","pages/org-admin/org-group-info.js","pages/org-admin/org-group-repos.js","pages/org-admin/org-group-members.js","models/org-admin-repo.js","pages/org-admin/org-libraries.js","pages/org-admin/org-info.js","components/dialog/view-link-dialog.js","pages/org-admin/org-links.js","pages/org-admin/org-departments.js","components/dialog/org-add-department-dialog.js","components/dialog/org-delete-department-dialog.js","components/dialog/org-set-group-quota-dialog.js","pages/org-admin/org-departments-list.js","components/dialog/org-add-member-dialog.js","components/dialog/org-delete-member-dialog.js","components/dialog/org-add-repo-dialog.js","components/dialog/org-delete-repo-dialog.js","pages/org-admin/org-department-item.js","pages/org-admin/org-logs.js","models/org-logs-file-audit.js","pages/org-admin/org-logs-file-audit.js","models/org-logs-file-update.js","components/dialog/org-logs-file-update-detail.js","pages/org-admin/org-logs-file-update.js","models/org-logs-perm-audit.js","pages/org-admin/org-logs-perm-audit.js","pages/org-admin/index.js"],"names":["SidePanel","getActiveClass","tab","props","currentTab","tabItemClick","className","this","isSidePanelClosed","onCloseSidePanel","style","gettext","to","siteRoot","onClick","React","Component","Nav","navItems","name","urlPart","text","currentItem","map","item","index","UserStatusEditor","translateStatus","userStatus","isTextMode","isEditIconShow","options","statusArray","currentOption","currentStatus","onOptionChanged","onStatusChanged","translateOption","UserItem","onMouseEnter","isItemFreezed","setState","showMenu","highlight","onMouseLeave","toggleDelete","email","user","toggleResetPW","toaster","success","seafileAPI","orgAdminResetOrgUserPassword","orgID","then","res","msg","replace","data","new_password","duration","catch","error","errMessage","Utils","getErrorMsg","danger","toggleRevokeAdmin","changeStatus","st","isActive","orgAdminChangeOrgUserStatus","onDropdownToggleClick","e","preventDefault","toggleOperationMenu","stopPropagation","isItemMenuShow","state","onFreezedItem","onUnfreezedItem","getQuotaTotal","formatSize","bytes","is_active","href","encodeURIComponent","isOperationMenuShow","username","quota_usage","quota_total","ctime","last_login","isOpen","toggle","tag","title","data-toggle","aria-expanded","OrgUsersList","onChangePageNum","num","page","initOrgUsersData","sortByQuotaUsage","sortIcon","sortBy","sortOrder","orgUsers","pageNext","width","MainPanelTopbar","children","isAdminPanel","AddOrgUserDialog","handleSubmit","validateInputParams","password","isAddingUser","trim","handleKeyPress","key","togglePasswordVisible","isPasswordVisible","passwdInput","type","passwdNewInput","generatePassword","val","Math","random","toString","substr","passwdnew","inputEmail","target","value","inputName","inputPassword","passwd","inputPasswordNew","createRef","length","password1","password2","for","id","onChange","innerRef","input","addonType","color","disabled","InviteUserDialog","copyLink","copy","invitationLink","message","moment","locale","lang","OrgUserInfo","object","contact_email","owner_contact_email","fromNow","format","OrgUsers","url","URL","location","searchParams","URLSearchParams","search","set","navigate","toggleAddOrgUser","isShowAddOrgUserDialog","toggleInviteUserDialog","isInviteUserDialogOpen","orgAdminListOrgUsers","userList","user_list","page_next","addOrgUser","orgAdminAddOrgUser","userInfo","unshift","toggleOrgUsersDelete","orgAdminDeleteOrgUser","users","filter","urlParams","window","parseInt","get","topbarChildren","topBtn","OrgAdminList","initOrgAdmin","orgAdminUsers","AddOrgAdminDialog","handleSelectChange","option","selectedOption","addOrgAdmin","userEmail","orgAdminSetOrgAdmin","onAddedOrgAdmin","ref","isMulti","placeholder","onSelectChange","toggleAddOrgAdmin","isShowAddOrgAdminDialog","toggleOrgAdminDelete","OrgAdminUserNav","urlBase","SetOrgUserName","handleInputChange","inputValue","formSubmit","submitBtnDisabled","orgAdminSetOrgUserName","newName","updateName","toggleDialog","errorMsg","formErrorMsg","centered","Fragment","SetOrgUserContactEmail","contactEmail","orgAdminSetOrgUserContactEmail","newContactEmail","updateContactEmail","SetOrgUserQuota","quota","orgAdminSetOrgUserQuota","updateQuota","initialQuota","quotaTotal","org","pageOptions","orgName","OrgUserProfile","loading","orgAdminGetOrgUserInfo","Object","assign","Content","toggleSetNameDialog","isSetNameDialogOpen","toggleSetContactEmailDialog","isSetContactEmailDialogOpen","toggleSetQuotaDialog","isSetQuotaDialogOpen","avatar_url","src","height","alt","bytesToSize","OrgUserOwnedRepos","orgAdminGetOrgUserOwnedRepos","repo_list","Item","handleMouseOver","isOpIconShown","handleMouseOut","handleDeleteIconClick","toggleDeleteRepoDialog","isDeleteRepoDialogOpen","deleteRepo","repo","orgAdminDeleteOrgRepo","repo_id","deleted","isRepoDeleted","repo_name","onMouseOver","onMouseOut","getLibIconUrl","getLibIconTitle","size","last_modified","onDeleteRepo","OrgUserSharedRepos","orgAdminGetOrgUserBesharedRepos","owner_name","OrgGroupInfo","groupName","group_name","creatorName","creator_name","creatorEmail","creator_email","creatorContactEmail","creator_contact_email","OrgGroups","initData","orgAdminListOrgGroups","orgGroups","groups","deleteGroupItem","group","orgAdminDeleteOrgGroup","GroupItem","renderGroupHref","renderGroupCreator","userInfoHref","OrgAdminGroupNav","groupID","orgAdminGetGroup","OrgGroupRepos","orgAdminListGroupRepos","libraries","shared_by","shared_by_name","OrgGroupMembers","orgAdminListGroupMembers","members","role","getRoleText","OrgAdminRepo","repoID","repoName","ownerName","ownerEmail","owner_email","file_count","encrypted","isDepartmentRepo","is_department_repo","group_id","OrgLibraries","listRepos","orgAdminListOrgRepos","orgRepos","deleteRepoItem","transferRepoItem","sortItems","sortByFileCount","sortBySize","initialSortIcon","RepoItem","toggleTransfer","renderLibIcon","iconTitle","mediaUrl","renderRepoOwnerHref","isTransferDialogShow","onTransferRepo","orgAdminTransferOrgRepo","itemName","submit","OrgInfo","storage_quota","storage_usage","member_quota","member_usage","active_members","orgAdminGetOrgInfo","orgMemberQuotaEnabled","ViewLinkDialog","copyToClipBoard","currentLinkHref","OrgLinks","listOrgLinks","orgAdminListOrgLinks","linkList","link_list","event","deleteOrgLink","token","orgAdminDeleteOrgLink","openLinkDialog","link","indexOf","serviceURL","toggleLinkDialog","isShowLinkDialog","created_time","view_count","bind","OrgDepartments","AddDepartDialog","validateName","parentGroup","parentGroupID","orgAdminAddDepartGroup","departName","onDepartChanged","response","error_msg","handleChange","newInput","focus","setSelectionRange","header","onKeyPress","DeleteDepartDialog","deleteDepart","orgAdminDeleteDepartGroup","subtitle","HTMLescape","dangerouslySetInnerHTML","__html","SetGroupQuotaDialog","setGroupQuota","test","newQuota","orgAdminSetGroupQuota","err","OrgDepartmentsList","listDepartGroups","orgAdminListDepartGroups","showDeleteDepartDialog","showSetGroupQuotaDialog","toggleAddDepartDialog","isShowAddDepartDialog","toggleCancel","newHref","created_at","AddMemberDialog","Options","refs","orgSelect","clearSelect","orgAdminAddGroupMember","failed","onMemberChanged","DeleteMemberDialog","deleteMember","member","orgAdminDeleteGroupMember","AddRepoDialog","orgAdminAddDepartmentRepo","onRepoChanged","DeleteRepoDialog","orgAdminDeleteDepartmentRepo","OrgDepartmentItem","listOrgGroupRepo","repos","listOrgMembers","orgAdminListGroupInfo","ancestorGroups","ancestor_groups","listSubDepartGroups","showDeleteMemberDialog","showDeleteRepoDialog","onSubDepartChanged","toggleItemFreezed","isFreezed","deletedMember","deletedRepo","toggleAddRepoDialog","isShowAddRepoDialog","toggleAddMemberDialog","isShowAddMemberDialog","subGroup","subGroupID","subGroupName","nextProps","ancestor","MemberItem","toggleMemberRoleMenu","showRoleMenu","onChangeUserRole","isAdmin","orgAdminSetGroupMemberRole","roles","memberLink","currentRole","onRoleChanged","iconUrl","OrgLogs","param","OrgLogsFileAuditEvent","ip","device","file_name","file_path","user_name","user_email","user_contact_email","time","OrgLogsFileAudit","orgAdminListFileAudit","eventList","log_list","userSelected","user_selected","repoSelected","repo_selected","filterUser","filterRepo","fileEvent","FileAuditItem","toggleUserDropdown","userDropdownOpen","renderUser","renderType","toggleRepoDropdown","repoDropdownOpen","renderRepo","OrgLogsFileUpdateEvent","description","repo_encrypted","repo_commit_id","FileUpdateDetailDialog","renderContentItem","items","con","i","len","renderContent","newfile","removed","renamed","modified","newdir","deldir","orgAdminGetFileUpdateDetail","commitID","date_time","concat","new","OrgLogsFileUpdate","orgAdminListFileUpdate","toggleCancelDetail","showDetails","onDetails","FileUpdateItem","renderAction","OrgLogsPermAuditEvent","from_user_name","from_user_email","from_user_contact_email","to_user_email","to_user_name","to_user_contact_email","to_group_name","to_group_id","folder_name","folder_path","permission","orgAdminListPermAudit","OrgLogsFilePermEvent","permEvent","PermAuditItem","renderFromUser","renderToUser","renderFolder","folderName","sharePerms","Org","split","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/orgAdmin.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from '@reach/router';\nimport Logo from '../../components/logo';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nconst propTypes = {\n  isSidePanelClosed: PropTypes.bool.isRequired,\n  onCloseSidePanel: PropTypes.func.isRequired,\n  currentTab: PropTypes.string.isRequired,\n  tabItemClick: PropTypes.func.isRequired\n};\n\nclass SidePanel extends React.Component {\n\n  getActiveClass = (tab) => {\n    return this.props.currentTab == tab ? 'active' : '';\n  }\n\n  tabItemClick = (tab) => {\n    this.props.tabItemClick(tab);\n  }\n\n  render() {\n    return (\n      <div className={`side-panel ${this.props.isSidePanelClosed ? '' : 'left-zero'}`}>\n        <div className=\"side-panel-north\">\n          <Logo onCloseSidePanel={this.props.onCloseSidePanel}/>\n        </div>\n        <div className=\"side-panel-center\">\n          <div className=\"side-nav\">\n            <div className=\"side-nav-con\">\n              <h3 className=\"sf-heading\" style={{ 'color': '#f7941d' }}>{gettext('Admin')}</h3>\n              <ul className=\"nav nav-pills flex-column nav-container\">\n                <li className=\"nav-item\">\n                  <Link className={`nav-link ellipsis ${this.getActiveClass('orgmanage')}`} to={siteRoot + 'org/orgmanage/'} onClick={() => this.tabItemClick('orgmanage')} >\n                    <span className=\"sf2-icon-info\"></span>\n                    <span className=\"nav-text\">{gettext('Info')}</span>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className={`nav-link ellipsis ${this.getActiveClass('repoadmin')}`} to={siteRoot + 'org/repoadmin/'} onClick={() => this.tabItemClick('repoadmin')} >\n                    <span className=\"sf2-icon-library\"></span>\n                    <span className=\"nav-text\">{gettext('Libraries')}</span>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className={`nav-link ellipsis ${this.getActiveClass('users') || this.getActiveClass('admins')}`} to={siteRoot + 'org/useradmin/'} onClick={() => this.tabItemClick('users')} >\n                    <span className=\"sf2-icon-user\"></span>\n                    <span className=\"nav-text\">{gettext('Users')}</span>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className={`nav-link ellipsis ${this.getActiveClass('groupadmin')}`} to={siteRoot + 'org/groupadmin/'} onClick={() => this.tabItemClick('groupadmin')}>\n                    <span className=\"sf2-icon-group\"></span>\n                    <span className=\"nav-text\">{gettext('Groups')}</span>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className={`nav-link ellipsis ${this.getActiveClass('departmentadmin')}`} to={siteRoot + 'org/departmentadmin/'} onClick={() => this.tabItemClick('departmentadmin')} >\n                    <span className=\"sf2-icon-organization\"></span>\n                    <span className=\"nav-text\">{gettext('Departments')}</span>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className={`nav-link ellipsis ${this.getActiveClass('publinkadmin')}`} to={siteRoot + 'org/publinkadmin/'} onClick={() => this.tabItemClick('publinkadmin')} >\n                    <span className=\"sf2-icon-link\"></span>\n                    <span className=\"nav-text\">{gettext('Links')}</span>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className={`nav-link ellipsis ${this.getActiveClass('logadmin') || this.getActiveClass('file-update') || this.getActiveClass('perm-audit')}`} to={siteRoot + 'org/logadmin/'} onClick={() => this.tabItemClick('logadmin')} >\n                    <span className=\"sf2-icon-clock\"></span>\n                    <span className=\"nav-text\">{gettext('Logs')}</span>\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidePanel.propTypes = propTypes;\n\nexport default SidePanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from '@reach/router';\nimport { siteRoot, gettext } from '../../utils/constants';\n\nconst propTypes = {\n  currentItem: PropTypes.string.isRequired\n};\n\nclass Nav extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.navItems = [\n      {name: 'all', urlPart: 'useradmin', text: gettext('All')},\n      {name: 'admins', urlPart: 'useradmin/admins', text: gettext('Admin')}\n    ];\n  }\n\n  render() {\n    const { currentItem } = this.props;\n    return (\n      <div className=\"cur-view-path tab-nav-container\">\n        <ul className=\"nav\">\n          {this.navItems.map((item, index) => {\n            return (\n              <li className=\"nav-item\" key={index}>\n                <Link to={`${siteRoot}org/${item.urlPart}/`} className={`nav-link${currentItem == item.name ? ' active' : ''}`}>{item.text}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nNav.propTypes = propTypes;\n\nexport default Nav;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport SelectEditor from './select-editor';\n\nconst propTypes = {\n  isTextMode: PropTypes.bool.isRequired,\n  isEditIconShow: PropTypes.bool.isRequired,\n  statusArray: PropTypes.array.isRequired,\n  currentStatus: PropTypes.string.isRequired,\n  onStatusChanged: PropTypes.func.isRequired\n};\n\nclass UserStatusEditor extends React.Component {\n\n  translateStatus = (userStatus) => {\n    if (userStatus === 'active') {\n      return gettext('Active');\n    }\n\n    if (userStatus === 'inactive') {\n      return gettext('Inactive');\n    }\n  }\n\n  render() {\n    return (\n      <SelectEditor\n        isTextMode={this.props.isTextMode}\n        isEditIconShow={this.props.isEditIconShow}\n        options={this.props.statusArray}\n        currentOption={this.props.currentStatus}\n        onOptionChanged={this.props.onStatusChanged}\n        translateOption={this.translateStatus}\n      />\n    );\n  }\n\n}\n\nUserStatusEditor.propTypes = propTypes;\n\nexport default UserStatusEditor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { gettext, siteRoot, orgID, username } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../../components/toast';\nimport UserStatusEditor from '../../components/select-editor/user-status-editor';\n\nconst propTypes = {\n  user: PropTypes.object,\n  currentTab: PropTypes.string,\n  toggleRevokeAdmin: PropTypes.func,\n  isItemFreezed: PropTypes.bool.isRequired,\n  toggleDelete: PropTypes.func.isRequired,\n  onFreezedItem: PropTypes.func.isRequired,\n  onUnfreezedItem: PropTypes.func.isRequired,\n};\n\nclass UserItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlight: false,\n      showMenu: false,\n      currentStatus: this.props.user.is_active ? 'active' : 'inactive',\n      isItemMenuShow: false\n    };\n\n    this.statusArray = ['active', 'inactive'];\n  }\n\n  onMouseEnter = () => {\n    if (!this.props.isItemFreezed) {\n      this.setState({\n        showMenu: true,\n        highlight: true,\n      });\n    }\n  }\n\n  onMouseLeave = () => {\n    if (!this.props.isItemFreezed) {\n      this.setState({\n        showMenu: false,\n        highlight: false\n      });\n    }\n  }\n\n  toggleDelete = () => {\n    const email = this.props.user.email;\n    this.props.toggleDelete(email);\n  }\n\n  toggleResetPW = () => {\n    const { email, name } = this.props.user;\n    toaster.success(gettext('Resetting user\\'s password, please wait for a moment.'));\n    seafileAPI.orgAdminResetOrgUserPassword(orgID, email).then(res => {\n      let msg;\n      msg = gettext('Successfully reset password to %(passwd)s for user %(user)s.');\n      msg = msg.replace('%(passwd)s', res.data.new_password);\n      msg = msg.replace('%(user)s', name);\n      toaster.success(msg, {\n        duration: 15\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  toggleRevokeAdmin = () => {\n    const email = this.props.user.email;\n    this.props.toggleRevokeAdmin(email);\n  }\n\n  changeStatus = (st) => {\n    let isActive;\n    if (st == 'active') {\n      isActive = 'true';\n    } else {\n      isActive = 'false';\n    }\n\n    seafileAPI.orgAdminChangeOrgUserStatus(orgID, this.props.user.email, isActive).then(res => {\n      this.setState({\n        currentStatus: isActive == 'true' ? 'active' : 'inactive',\n        highlight: false,\n        showMenu: false,\n      });\n      toaster.success(gettext('Edit succeeded.'));\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      if (errMessage === gettext('Error')) {\n        errMessage = gettext('Edit failed.');\n      }\n      toaster.danger(errMessage);\n    });\n  }\n\n  onDropdownToggleClick = (e) => {\n    e.preventDefault();\n    this.toggleOperationMenu(e);\n  }\n\n  toggleOperationMenu = (e) => {\n    e.stopPropagation();\n    this.setState(\n      {isItemMenuShow: !this.state.isItemMenuShow }, () => {\n        if (this.state.isItemMenuShow) {\n          this.props.onFreezedItem();\n        } else {\n          this.setState({\n            highlight: false,\n            showMenu: false,\n          });\n          this.props.onUnfreezedItem();\n        }\n      }\n    );\n  }\n\n  getQuotaTotal = (data) => {\n    switch (data) {\n      case -1: // failed to fetch quota\n        return gettext('Failed');\n      case -2:\n        return '--';\n      default: // data > 0\n        return Utils.formatSize({bytes: data});\n    }\n  }\n\n  render() {\n    let { user, currentTab } = this.props;\n    let href = siteRoot + 'org/useradmin/info/' + encodeURIComponent(user.email) + '/';\n    let isOperationMenuShow = (user.email !== username)  && this.state.showMenu;\n    let isEditIconShow = isOperationMenuShow;\n    return (\n      <tr className={this.state.highlight ? 'tr-highlight' : ''} onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n        <td>\n          <a href={href}>{user.name}</a>\n        </td>\n        <td>\n          <UserStatusEditor\n            isTextMode={true}\n            isEditIconShow={isEditIconShow}\n            currentStatus={this.state.currentStatus}\n            statusArray={this.statusArray}\n            onStatusChanged={this.changeStatus}\n          />\n        </td>\n        <td>{`${Utils.formatSize({bytes: user.quota_usage})} / ${this.getQuotaTotal(user.quota_total)}`}</td>\n        <td>\n          {user.ctime} /\n          <br />\n          {user.last_login ? user.last_login : '--'}\n        </td>\n        <td className=\"text-center cursor-pointer\">\n          {isOperationMenuShow && (\n            <Dropdown isOpen={this.state.isItemMenuShow} toggle={this.toggleOperationMenu}>\n              <DropdownToggle\n                tag=\"a\"\n                className=\"attr-action-icon fas fa-ellipsis-v\"\n                title={gettext('More Operations')}\n                data-toggle=\"dropdown\"\n                aria-expanded={this.state.isItemMenuShow}\n                onClick={this.onDropdownToggleClick}\n              />\n              <DropdownMenu>\n                <DropdownItem onClick={this.toggleDelete}>{gettext('Delete')}</DropdownItem>\n                <DropdownItem onClick={this.toggleResetPW}>{gettext('ResetPwd')}</DropdownItem>\n                {currentTab == 'admins' && <DropdownItem onClick={this.toggleRevokeAdmin}>{gettext('Revoke Admin')}</DropdownItem>}\n              </DropdownMenu>\n            </Dropdown>\n          )}\n        </td>\n      </tr>\n    );\n  }\n}\n\nUserItem.propTypes = propTypes;\n\nexport default UserItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport UserItem from './org-user-item';\n\nconst propTypes = {\n  initOrgUsersData: PropTypes.func.isRequired,\n  toggleDelete: PropTypes.func.isRequired,\n  orgUsers: PropTypes.array.isRequired,\n  page: PropTypes.number.isRequired,\n  pageNext: PropTypes.bool.isRequired,\n};\n\nclass OrgUsersList extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isItemFreezed: false\n    };\n  }\n\n  onFreezedItem = () => {\n    this.setState({isItemFreezed: true});\n  }\n\n  onUnfreezedItem = () => {\n    this.setState({isItemFreezed: false});\n  }\n\n  onChangePageNum = (e, num) => {\n    e.preventDefault();\n    let page = this.props.page;\n\n    if (num == 1) {\n      page = page + 1;\n    } else {\n      page = page - 1;\n    }\n\n    this.props.initOrgUsersData(page);\n  }\n\n  sortByQuotaUsage = (e) => {\n    e.preventDefault();\n    this.props.sortByQuotaUsage();\n  }\n\n  render() {\n    const { sortBy, sortOrder } = this.props;\n    let sortIcon;\n    if (sortBy == '') {\n      // initial sort icon\n      sortIcon = <span className=\"fas fa-sort\"></span>;\n    } else {\n      sortIcon = <span className={`fas ${sortOrder == 'asc' ? 'fa-caret-up' : 'fa-caret-down'}`}></span>;\n    }\n    let { orgUsers, page, pageNext } = this.props;\n    return (\n      <div className=\"cur-view-content\">\n        <table>\n          <thead>\n            <tr>\n              <th width=\"30%\">{gettext('Name')}</th>\n              <th width=\"15%\">{gettext('Status')}</th>\n              <th width=\"20%\">\n                <a className=\"d-inline-block table-sort-op\" href=\"#\" onClick={this.sortByQuotaUsage}>{gettext('Space Used')} {sortIcon}</a> / {gettext('Quota')}\n              </th>\n              <th width=\"25%\">{gettext('Created At')} / {gettext('Last Login')}</th>\n              <th width=\"10%\">{/*Operations*/}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orgUsers.map((item, index) => {\n              return (\n                <UserItem\n                  key={index}\n                  user={item}\n                  currentTab=\"users\"\n                  isItemFreezed={this.state.isItemFreezed}\n                  toggleDelete={this.props.toggleDelete}\n                  onFreezedItem={this.onFreezedItem}\n                  onUnfreezedItem={this.onUnfreezedItem}\n                />\n              );})}\n          </tbody>\n        </table>\n        <div className=\"paginator\">\n          {page !=1 && <a href=\"#\" onClick={(e) => this.onChangePageNum(e, -1)}>{gettext('Previous')}</a>}\n          {(page != 1 && pageNext) && <span> | </span>}\n          {pageNext && <a href=\"#\" onClick={(e) => this.onChangePageNum(e, 1)}>{gettext('Next')}</a>}\n        </div>\n      </div>\n    );\n  }\n}\n\nOrgUsersList.propTypes = propTypes;\n\nexport default OrgUsersList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Account from '../../components/common/account';\n\nconst propTypes = {\n  children: PropTypes.object,\n};\n\nclass MainPanelTopbar extends Component {\n\n  render() {\n    return (\n      <div className={`main-panel-north ${this.props.children ? 'border-left-show' : ''}`}>\n        <div className=\"cur-view-toolbar\">\n          <span className=\"sf2-icon-menu side-nav-toggle hidden-md-up d-md-none\" title=\"Side Nav Menu\"></span>\n          <div className=\"operation\">\n            {this.props.children}\n          </div>\n        </div>\n        <div className=\"common-toolbar\">\n          <Account isAdminPanel={true}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nMainPanelTopbar.propTypes = propTypes;\n\nexport default MainPanelTopbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, Input, ModalHeader, ModalBody, ModalFooter, Label, Form, InputGroup, InputGroupAddon, FormGroup } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  toggle: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nclass AddOrgUserDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPasswordVisible: true,\n      email: '',\n      name: '',\n      password: '',\n      passwdnew: '',\n      errMessage: '',\n      isAddingUser: false,\n    };\n    this.passwdInput = React.createRef();\n    this.passwdNewInput = React.createRef();\n  }\n\n  handleSubmit = () => {\n    let isValid = this.validateInputParams();\n    if (isValid) {\n      let { email, name, password } = this.state;\n      this.setState({isAddingUser: true});\n      this.props.handleSubmit(email, name.trim(), password);\n    }\n  }\n\n  handleKeyPress = (e) => {\n    e.preventDefault();\n    if (e.key == 'Enter') {\n      this.handleSubmit(e);\n    }\n  };\n\n  togglePasswordVisible = () => {\n    this.setState({isPasswordVisible: !this.state.isPasswordVisible}, () => {\n      if (this.state.isPasswordVisible) {\n        this.passwdInput.type = 'password';\n        this.passwdNewInput.type = 'password';\n      } else {\n        this.passwdInput.type = 'text';\n        this.passwdNewInput.type = 'text';\n      }\n    });\n  }\n\n  generatePassword = () => {\n    let val = Math.random().toString(36).substr(5);\n    this.setState({\n      password: val,\n      passwdnew: val,\n      isPasswordVisible: false\n    }, () => {\n      this.passwdInput.type = 'text';\n      this.passwdNewInput.type = 'text';\n    });\n  }\n\n  inputEmail = (e) => {\n    let email = e.target.value.trim();\n    this.setState({email: email});\n  }\n\n  inputName = (e) => {\n    let name = e.target.value;\n    this.setState({name: name});\n  }\n\n  inputPassword = (e) => {\n    let passwd = e.target.value.trim();\n    this.setState({password: passwd}, () => {\n      if (this.state.isPasswordVisible) {\n        this.passwdInput.type = 'password';\n        this.passwdNewInput.type = 'password';\n      }\n    });\n  }\n\n  inputPasswordNew = (e) => {\n    let passwd = e.target.value.trim();\n    this.setState({passwdnew: passwd}, () => {\n      if (this.state.isPasswordVisible) {\n        this.passwdInput.type = 'password';\n        this.passwdNewInput.type = 'password';\n      }\n    });\n  }\n\n  toggle = () => {\n    this.props.toggle();\n  }\n\n  validateInputParams() {\n    let errMessage;\n    let email = this.state.email;\n    if (!email.length) {\n      errMessage = gettext('email is required');\n      this.setState({errMessage: errMessage});\n      return false;\n    }\n    let name = this.state.name.trim();\n    if (!name.length) {\n      errMessage = gettext('Name is required');\n      this.setState({errMessage: errMessage});\n      return false;\n    }\n\n    let password1 = this.state.password;\n    let password2 = this.state.passwdnew;\n    if (!password1.length) {\n      errMessage = gettext('Please enter password');\n      this.setState({errMessage: errMessage});\n      return false;\n    }\n    if (!password2.length) {\n      errMessage = gettext('Please enter the password again');\n      this.setState({errMessage: errMessage});\n      return false;\n    }\n    if (password1 !== password2) {\n      errMessage = gettext('Passwords don\\'t match');\n      this.setState({errMessage: errMessage});\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} toggle={this.toggle}>\n        <ModalHeader toggle={this.toggle}>{gettext('Add User')}</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label for=\"userEmail\">{gettext('Email')}</Label>\n              <Input id=\"userEmail\"  value={this.state.email || ''} onChange={this.inputEmail} />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"userName\">{gettext('Name')}</Label>\n              <Input id=\"userName\" value={this.state.name || ''} onChange={this.inputName} />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"userPwd\">{gettext('Password')}</Label>\n              <InputGroup className=\"passwd\">\n                <Input id=\"userPwd\" innerRef={input => {this.passwdInput = input;}} value={this.state.password || ''} onChange={this.inputPassword} />\n                <InputGroupAddon addonType=\"append\">\n                  <Button onClick={this.togglePasswordVisible}><i className={`link-operation-icon fas ${this.state.isPasswordVisible ? 'fa-eye-slash' : 'fa-eye'}`}></i></Button>\n                  <Button onClick={this.generatePassword}><i className=\"link-operation-icon fas fa-magic\"></i></Button>\n                </InputGroupAddon>\n              </InputGroup>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"userPwdNew\">{gettext('Confirm Password')}</Label>\n              <Input id=\"userPwdNew\" innerRef={input => {this.passwdNewInput = input;}}  className=\"passwd\"   value={this.state.passwdnew || ''} onChange={this.inputPasswordNew} />\n            </FormGroup>\n          </Form>\n          {this.state.errMessage && <Label className=\"err-message\">{this.state.errMessage}</Label>}\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" disabled={this.state.isAddingUser} onClick={this.handleSubmit} className={this.state.isAddingUser ? 'btn-loading' : ''}>{gettext('Submit')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nAddOrgUserDialog.propTypes = propTypes;\n\nexport default AddOrgUserDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\nimport toaster from '../toast';\nimport copy from '../copy-to-clipboard';\n\nconst propTypes = {\n  toggle: PropTypes.func.isRequired,\n  invitationLink: PropTypes.string.isRequired\n};\n\nclass InviteUserDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  copyLink = () => {\n    copy(this.props.invitationLink);\n    this.props.toggle();\n    const message = gettext('Internal link has been copied to clipboard');\n    toaster.success(message), {\n      duration: 2\n    };\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true}>\n        <ModalHeader toggle={this.props.toggle}>{gettext('Invite user')}</ModalHeader>\n        <ModalBody>\n          <p>{gettext('Send the invitation link to the others, and they will be able to join the organization via scanning the QR code.')}</p>\n          <p>{this.props.invitationLink}</p>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.copyLink}>{gettext('Copy')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nInviteUserDialog.propTypes = propTypes;\n\nexport default InviteUserDialog;\n","import { Utils } from '../utils/utils';\nimport { lang } from '../utils/constants';\nimport moment from 'moment';\n\nmoment.locale(lang);\n\nclass OrgUserInfo {\n  constructor(object) {\n    this.id = object.id;\n    this.name = object.name;\n    this.email = object.email;\n    this.contact_email = object.owner_contact_email;\n    this.is_active = object.is_active;\n    this.quota_usage = object.quota_usage;\n    this.quota_total = object.quota_total;\n    this.last_login = object.last_login ? moment(object.last_login).fromNow() : '--';\n    this.ctime = moment(object.ctime).format('YYYY-MM-DD HH:mm:ss');\n  }\n}\n\nexport default OrgUserInfo;\n","import React, { Component, Fragment } from 'react';\nimport { navigate } from '@reach/router';\nimport Nav from './org-users-nav';\nimport OrgUsersList from './org-users-list';\nimport MainPanelTopbar from './main-panel-topbar';\nimport ModalPortal from '../../components/modal-portal';\nimport AddOrgUserDialog from '../../components/dialog/org-add-user-dialog';\nimport InviteUserDialog from '../../components/dialog/org-admin-invite-user-dialog';\nimport toaster from '../../components/toast';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport OrgUserInfo from '../../models/org-user';\nimport { gettext, invitationLink, orgID } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\n\nclass OrgUsers extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      orgUsers: [],\n      page: 1,\n      pageNext: false,\n      sortBy: '',\n      sortOrder: 'asc',\n      isShowAddOrgUserDialog: false,\n      isInviteUserDialogOpen: false\n    };\n  }\n\n  componentDidMount() {\n    let urlParams = (new URL(window.location)).searchParams;\n    const { page, sortBy, sortOrder } = this.state;\n    this.setState({\n      /*\n        perPage: parseInt(urlParams.get('per_page') || perPage),\n        currentPage: parseInt(urlParams.get('page') || currentPage),\n        */\n      page: parseInt(urlParams.get('page') || page),\n      sortBy: urlParams.get('order_by') || sortBy,\n      sortOrder: urlParams.get('direction') || sortOrder\n    }, () => {\n      this.initOrgUsersData(this.state.page);\n    });\n  }\n\n  sortByQuotaUsage = () => {\n    this.setState({\n      sortBy: 'quota_usage',\n      sortOrder: this.state.sortOrder == 'asc' ? 'desc' : 'asc',\n      page: 1\n    }, () => {\n      let url = new URL(location.href);\n      let searchParams = new URLSearchParams(url.search);\n      const { page, sortBy, sortOrder } = this.state;\n      searchParams.set('page', page);\n      searchParams.set('order_by', sortBy);\n      searchParams.set('direction', sortOrder);\n      url.search = searchParams.toString();\n      navigate(url.toString());\n      this.initOrgUsersData(page);\n    });\n  }\n\n  toggleAddOrgUser = () => {\n    this.setState({isShowAddOrgUserDialog: !this.state.isShowAddOrgUserDialog});\n  }\n\n  toggleInviteUserDialog = () => {\n    this.setState({isInviteUserDialogOpen: !this.state.isInviteUserDialogOpen});\n  }\n\n  initOrgUsersData = (page) => {\n    const { sortBy, sortOrder } = this.state;\n    seafileAPI.orgAdminListOrgUsers(orgID, '', page, sortBy, sortOrder).then(res => {\n      let userList = res.data.user_list.map(item => {\n        return new OrgUserInfo(item);\n      });\n      this.setState({\n        orgUsers: userList,\n        pageNext: res.data.page_next,\n        page: res.data.page,\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  addOrgUser = (email, name, password) => {\n    seafileAPI.orgAdminAddOrgUser(orgID, email, name, password).then(res => {\n      let userInfo = new OrgUserInfo(res.data);\n      this.state.orgUsers.unshift(userInfo);\n      this.setState({\n        orgUsers: this.state.orgUsers\n      });\n      this.toggleAddOrgUser();\n      let msg = gettext('successfully added user %s.');\n      msg = msg.replace('%s', email);\n      toaster.success(msg);\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n      this.toggleAddOrgUser();\n    });\n  }\n\n  toggleOrgUsersDelete = (email) => {\n    seafileAPI.orgAdminDeleteOrgUser(orgID, email).then(res => {\n      let users = this.state.orgUsers.filter(item => item.email != email);\n      this.setState({orgUsers: users});\n      let msg = gettext('Successfully deleted %s');\n      msg = msg.replace('%s', email);\n      toaster.success(msg);\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    const topBtn = 'btn btn-secondary operation-item';\n    let topbarChildren;\n    topbarChildren = (\n      <Fragment>\n        <button className={topBtn} title={gettext('Add user')} onClick={this.toggleAddOrgUser}>\n          <i className=\"fas fa-plus-square text-secondary mr-1\"></i>{gettext('Add user')}</button>\n        {invitationLink &&\n        <button className={topBtn} title={gettext('Invite user')} onClick={this.toggleInviteUserDialog}>\n          <i className=\"fas fa-plus-square text-secondary mr-1\"></i>{gettext('Invite user')}</button>\n        }\n        {this.state.isShowAddOrgUserDialog &&\n        <ModalPortal>\n          <AddOrgUserDialog handleSubmit={this.addOrgUser} toggle={this.toggleAddOrgUser}/>\n        </ModalPortal>\n        }\n        {this.state.isInviteUserDialogOpen &&\n        <ModalPortal>\n          <InviteUserDialog invitationLink={invitationLink} toggle={this.toggleInviteUserDialog}/>\n        </ModalPortal>\n        }\n      </Fragment>\n    );\n\n    return (\n      <Fragment>\n        <MainPanelTopbar children={topbarChildren}/>\n        <div className=\"main-panel-center flex-row\">\n          <div className=\"cur-view-container\">\n            <Nav currentItem=\"all\" />\n            <OrgUsersList\n              initOrgUsersData={this.initOrgUsersData}\n              toggleDelete={this.toggleOrgUsersDelete}\n              orgUsers={this.state.orgUsers}\n              page={this.state.page}\n              pageNext={this.state.pageNext}\n              sortBy={this.state.sortBy}\n              sortOrder={this.state.sortOrder}\n              sortByQuotaUsage={this.sortByQuotaUsage}\n            />\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default OrgUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport UserItem from './org-user-item';\n\nimport '../../css/org-admin-paginator.css';\n\nconst propTypes = {\n  currentTab: PropTypes.string.isRequired,\n  toggleDelete: PropTypes.func.isRequired,\n  toggleRevokeAdmin: PropTypes.func.isRequired,\n  orgAdminUsers: PropTypes.array.isRequired,\n  initOrgAdmin: PropTypes.func.isRequired\n};\n\nclass OrgAdminList extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isItemFreezed: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.initOrgAdmin();\n  }\n\n  onFreezedItem = () => {\n    this.setState({isItemFreezed: true});\n  }\n\n  onUnfreezedItem = () => {\n    this.setState({isItemFreezed: false});\n  }\n\n  render() {\n    let orgAdminUsers = this.props.orgAdminUsers;\n\n    return (\n      <div className=\"cur-view-content\">\n        <table>\n          <thead>\n            <tr>\n              <th width=\"30%\">{gettext('Name')}</th>\n              <th width=\"15%\">{gettext('Status')}</th>\n              <th width=\"20%\">{gettext('Space Used')} / {gettext('Quota')}</th>\n              <th width=\"25%\">{gettext('Created At')} / {gettext('Last Login')}</th>\n              <th width=\"10%\">{/*Operations*/}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orgAdminUsers.map(item => {\n              return (\n                <UserItem\n                  key={item.index}\n                  user={item}\n                  currentTab=\"admins\"\n                  isItemFreezed={this.state.isItemFreezed}\n                  toggleDelete={this.props.toggleDelete}\n                  toggleRevokeAdmin={this.props.toggleRevokeAdmin}\n                  onFreezedItem={this.onFreezedItem}\n                  onUnfreezedItem={this.onUnfreezedItem}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nOrgAdminList.propTypes = propTypes;\n\nexport default OrgAdminList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Alert } from 'reactstrap';\nimport { gettext, orgID } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\nimport UserSelect from '../user-select';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport OrgUserInfo from '../../models/org-user';\n\nconst propTypes = {\n  toggle: PropTypes.func.isRequired,\n  onAddedOrgAdmin: PropTypes.func.isRequired,\n};\n\nclass AddOrgAdminDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: null,\n      errMessage: '',\n    };\n    this.options = [];\n  }\n\n  handleSelectChange = (option) => {\n    this.setState({\n      selectedOption: option,\n      errMessage: ''\n    });\n    this.options = [];\n  }\n\n  addOrgAdmin = () => {\n    if (!this.state.selectedOption) return;\n    const userEmail = this.state.selectedOption.email;\n    seafileAPI.orgAdminSetOrgAdmin(orgID, userEmail, true).then(res => {\n      let userInfo = new OrgUserInfo(res.data);\n      this.props.onAddedOrgAdmin(userInfo);\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  toggle = () => {\n    this.props.toggle();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} toggle={this.toggle}>\n        <ModalHeader toggle={this.toggle}>{gettext('Add Admins')}</ModalHeader>\n        <ModalBody>\n          <UserSelect\n            ref=\"userSelect\"\n            isMulti={false}\n            className=\"reviewer-select\"\n            placeholder={gettext('Select a user as admin...')}\n            onSelectChange={this.handleSelectChange}\n          />\n          {this.state.errMessage && <Alert color=\"danger\" className=\"mt-2\">{this.state.errMessage}</Alert>}\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.toggle}>{gettext('Close')}</Button>\n          <Button color=\"primary\" onClick={this.addOrgAdmin}>{gettext('Submit')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nAddOrgAdminDialog.propTypes = propTypes;\n\nexport default AddOrgAdminDialog;\n","import React, { Component, Fragment } from 'react';\nimport Nav from './org-users-nav';\nimport OrgAdminList from './org-admin-list';\nimport MainPanelTopbar from './main-panel-topbar';\nimport AddOrgAdminDialog from '../../components/dialog/org-add-admin-dialog';\nimport ModalPortal from '../../components/modal-portal';\nimport toaster from '../../components/toast';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport OrgUserInfo from '../../models/org-user';\nimport { gettext, orgID } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\n\nclass OrgUsers extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      orgAdminUsers: [],\n      isShowAddOrgAdminDialog: false\n    };\n  }\n\n  toggleAddOrgAdmin = () => {\n    this.setState({isShowAddOrgAdminDialog: !this.state.isShowAddOrgAdminDialog});\n  }\n\n  initOrgAdmin = () => {\n    seafileAPI.orgAdminListOrgUsers(orgID, true).then(res => {\n      let userList = res.data.user_list.map(item => {\n        return new OrgUserInfo(item);\n      });\n      this.setState({orgAdminUsers: userList});\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  toggleOrgAdminDelete = (email) => {\n    seafileAPI.orgAdminDeleteOrgUser(orgID, email).then(res => {\n      this.setState({\n        orgAdminUsers: this.state.orgAdminUsers.filter(item => item.email != email)\n      });\n      let msg = gettext('Successfully deleted %s');\n      msg = msg.replace('%s', email);\n      toaster.success(msg);\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  toggleRevokeAdmin = (email) => {\n    seafileAPI.orgAdminSetOrgAdmin(orgID, email, false).then(res => {\n      this.setState({\n        orgAdminUsers: this.state.orgAdminUsers.filter(item => item.email != email)\n      });\n      let msg = gettext('Successfully revoke the admin permission of %s');\n      msg = msg.replace('%s', res.data.name);\n      toaster.success(msg);\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  onAddedOrgAdmin = (userInfo) => {\n    this.state.orgAdminUsers.unshift(userInfo);\n    this.setState({\n      orgAdminUsers: this.state.orgAdminUsers\n    });\n    let msg = gettext('Successfully set %s as admin.');\n    msg = msg.replace('%s', userInfo.email);\n    toaster.success(msg);\n    this.toggleAddOrgAdmin();\n  }\n\n  render() {\n    const topBtn = 'btn btn-secondary operation-item';\n    let topbarChildren;\n    topbarChildren = (\n      <Fragment>\n        <button className={topBtn} title={gettext('Add admin')} onClick={this.toggleAddOrgAdmin}>\n          <i className=\"fas fa-plus-square text-secondary mr-1\"></i>{gettext('Add admin')}\n        </button>\n        {this.state.isShowAddOrgAdminDialog &&\n        <ModalPortal>\n          <AddOrgAdminDialog toggle={this.toggleAddOrgAdmin} onAddedOrgAdmin={this.onAddedOrgAdmin}/>\n        </ModalPortal>\n        }\n      </Fragment>\n    );\n\n    return (\n      <Fragment>\n        <MainPanelTopbar children={topbarChildren}/>\n        <div className=\"main-panel-center flex-row\">\n          <div className=\"cur-view-container\">\n            <Nav currentItem=\"admins\" />\n            <OrgAdminList\n              currentTab=\"admins\"\n              toggleDelete={this.toggleOrgAdminDelete}\n              toggleRevokeAdmin={this.toggleRevokeAdmin}\n              orgAdminUsers={this.state.orgAdminUsers}\n              initOrgAdmin={this.initOrgAdmin}\n            />\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default OrgUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from '@reach/router';\nimport { siteRoot, gettext } from '../utils/constants';\n\nconst propTypes = {\n  email: PropTypes.string.isRequired,\n  currentItem: PropTypes.string.isRequired\n};\n\nclass OrgAdminUserNav extends React.Component {\n\n  render() {\n    const { email, currentItem } = this.props;\n    const urlBase = `${siteRoot}org/useradmin/info/${encodeURIComponent(email)}/`;\n    return (\n      <div className=\"cur-view-path org-admin-user-nav\">\n        <ul className=\"nav\">\n          <li className=\"nav-item\">\n            <Link to={urlBase} className={`nav-link${currentItem == 'profile' ? ' active' : ''}`}>{gettext('Profile')}</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={`${urlBase}repos/`} className={`nav-link${currentItem == 'owned-repos' ? ' active' : ''}`}>{gettext('Owned Libraries')}</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={`${urlBase}shared-repos/`} className={`nav-link${currentItem == 'shared-repos' ? ' active' : ''}`}>{gettext('Shared Libraries')}</Link>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nOrgAdminUserNav.propTypes = propTypes;\n\nexport default OrgAdminUserNav;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\n\nconst propTypes = {\n  orgID: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  updateName: PropTypes.func.isRequired,\n  toggleDialog: PropTypes.func.isRequired\n};\n\nclass SetOrgUserName extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: this.props.name,\n      submitBtnDisabled: false\n    };\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    });\n  }\n\n  formSubmit = () => {\n    const { orgID, email } = this.props;\n    const name = this.state.inputValue.trim();\n\n    this.setState({\n      submitBtnDisabled: true\n    });\n\n    // when name is '', api returns the previous name\n    // but newName needs to be ''\n    seafileAPI.orgAdminSetOrgUserName(orgID, email, name).then((res) => {\n      const newName = name ? res.data.name : '';\n      this.props.updateName(newName);\n      this.props.toggleDialog();\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        formErrorMsg: errorMsg,\n        submitBtnDisabled: false\n      });\n    });\n  }\n\n  render() {\n    const { inputValue, formErrorMsg, submitBtnDisabled } = this.state;\n    return (\n      <Modal isOpen={true} centered={true} toggle={this.props.toggleDialog}>\n        <ModalHeader toggle={this.props.toggleDialog}>{gettext('Set user name')}</ModalHeader>\n        <ModalBody>\n          <React.Fragment>\n            <input type=\"text\" className=\"form-control\" value={inputValue} onChange={this.handleInputChange} />\n            {formErrorMsg && <p className=\"error m-0 mt-2\">{formErrorMsg}</p>}\n          </React.Fragment>\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"btn btn-secondary\" onClick={this.props.toggleDialog}>{gettext('Cancel')}</button>\n          <button className=\"btn btn-primary\" disabled={submitBtnDisabled} onClick={this.formSubmit}>{gettext('Submit')}</button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nSetOrgUserName.propTypes = propTypes;\n\nexport default SetOrgUserName;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\n\nconst propTypes = {\n  orgID: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  contactEmail: PropTypes.string.isRequired,\n  updateContactEmail: PropTypes.func.isRequired,\n  toggleDialog: PropTypes.func.isRequired\n};\n\nclass SetOrgUserContactEmail extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: this.props.contactEmail,\n      submitBtnDisabled: false\n    };\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    });\n  }\n\n  formSubmit = () => {\n    const { orgID, email } = this.props;\n    const contactEmail = this.state.inputValue.trim();\n\n    this.setState({\n      submitBtnDisabled: true\n    });\n\n    seafileAPI.orgAdminSetOrgUserContactEmail(orgID, email, contactEmail).then((res) => {\n      const newContactEmail = contactEmail ? res.data.contact_email : '';\n      this.props.updateContactEmail(newContactEmail);\n      this.props.toggleDialog();\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        formErrorMsg: errorMsg,\n        submitBtnDisabled: false\n      });\n    });\n  }\n\n  render() {\n    const { inputValue, formErrorMsg, submitBtnDisabled } = this.state;\n    return (\n      <Modal isOpen={true} centered={true} toggle={this.props.toggleDialog}>\n        <ModalHeader toggle={this.props.toggleDialog}>{gettext('Set user contact email')}</ModalHeader>\n        <ModalBody>\n          <React.Fragment>\n            <input type=\"text\" className=\"form-control\" value={inputValue} onChange={this.handleInputChange} />\n            {formErrorMsg && <p className=\"error m-0 mt-2\">{formErrorMsg}</p>}\n          </React.Fragment>\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"btn btn-secondary\" onClick={this.props.toggleDialog}>{gettext('Cancel')}</button>\n          <button className=\"btn btn-primary\" disabled={submitBtnDisabled} onClick={this.formSubmit}>{gettext('Submit')}</button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nSetOrgUserContactEmail.propTypes = propTypes;\n\nexport default SetOrgUserContactEmail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\n\nconst propTypes = {\n  orgID: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  quotaTotal: PropTypes.string.isRequired,\n  updateQuota: PropTypes.func.isRequired,\n  toggleDialog: PropTypes.func.isRequired\n};\n\nclass SetOrgUserQuota extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const initialQuota = this.props.quotaTotal < 0 ? '' :\n      this.props.quotaTotal / (1000 * 1000);\n    this.state = {\n      inputValue: initialQuota,\n      submitBtnDisabled: false\n    };\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    });\n  }\n\n  formSubmit = () => {\n    const { orgID, email } = this.props;\n    const quota = this.state.inputValue.trim();\n\n    if (!quota) {\n      this.setState({\n        formErrorMsg: gettext('It is required.')\n      });\n      return false;\n    }\n\n    this.setState({\n      submitBtnDisabled: true\n    });\n\n    seafileAPI.orgAdminSetOrgUserQuota(orgID, email, quota).then((res) => {\n      this.props.updateQuota(res.data.quota_total);\n      this.props.toggleDialog();\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        formErrorMsg: errorMsg,\n        submitBtnDisabled: false\n      });\n    });\n  }\n\n  render() {\n    const { inputValue, formErrorMsg, submitBtnDisabled } = this.state;\n    return (\n      <Modal isOpen={true} centered={true} toggle={this.props.toggleDialog}>\n        <ModalHeader toggle={this.props.toggleDialog}>{gettext('Set user quota')}</ModalHeader>\n        <ModalBody>\n          <React.Fragment>\n            <InputGroup>\n              <input type=\"text\" className=\"form-control\" value={inputValue} onChange={this.handleInputChange} />\n              <InputGroupAddon addonType=\"append\">\n                <InputGroupText>MB</InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n            <p className=\"small text-secondary mt-2 mb-2\">{gettext('Tip: 0 means default limit')}</p>\n            {formErrorMsg && <p className=\"error m-0 mt-2\">{formErrorMsg}</p>}\n          </React.Fragment>\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"btn btn-secondary\" onClick={this.props.toggleDialog}>{gettext('Cancel')}</button>\n          <button className=\"btn btn-primary\" disabled={submitBtnDisabled} onClick={this.formSubmit}>{gettext('Submit')}</button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nSetOrgUserQuota.propTypes = propTypes;\n\nexport default SetOrgUserQuota;\n","import React, { Component, Fragment } from 'react';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { gettext } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport Loading from '../../components/loading';\nimport OrgAdminUserNav from '../../components/org-admin-user-nav';\nimport SetOrgUserName from '../../components/dialog/set-org-user-name';\nimport SetOrgUserContactEmail from '../../components/dialog/set-org-user-contact-email';\nimport SetOrgUserQuota from '../../components/dialog/set-org-user-quota';\nimport MainPanelTopbar from './main-panel-topbar';\n\nimport '../../css/org-admin-user.css';\n\nconst { orgID, orgName } = window.org.pageOptions;\n\nclass OrgUserProfile extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      errorMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.orgAdminGetOrgUserInfo(orgID, this.props.email).then((res) => {\n      this.setState(Object.assign({\n        loading: false\n      }, res.data));\n    }).catch((error) => {\n      this.setState({\n        loading: false,\n        errorMsg: Utils.getErrorMsg(error, true) // true: show login tip if 403\n      });\n    });\n  }\n\n  updateName = (name) => {\n    this.setState({\n      name: name\n    });\n  }\n\n  updateContactEmail = (contactEmail) => {\n    this.setState({\n      contact_email: contactEmail\n    });\n  }\n\n  updateQuota = (quota) => {\n    this.setState({\n      quota_total: quota\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <MainPanelTopbar/>\n        <div className=\"main-panel-center flex-row\">\n          <div className=\"cur-view-container\">\n            <OrgAdminUserNav email={this.props.email} currentItem='profile' />\n            <div className=\"cur-view-content\">\n              <Content\n                data={this.state}\n                updateName={this.updateName}\n                updateContactEmail={this.updateContactEmail}\n                updateQuota={this.updateQuota}\n              />\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nclass Content extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSetNameDialogOpen: false,\n      isSetContactEmailDialogOpen: false,\n      isSetQuotaDialogOpen: false\n    };\n  }\n\n  toggleSetNameDialog = () => {\n    this.setState({\n      isSetNameDialogOpen: !this.state.isSetNameDialogOpen\n    });\n  }\n\n  toggleSetContactEmailDialog = () => {\n    this.setState({\n      isSetContactEmailDialogOpen: !this.state.isSetContactEmailDialogOpen\n    });\n  }\n\n  toggleSetQuotaDialog = () => {\n    this.setState({\n      isSetQuotaDialogOpen: !this.state.isSetQuotaDialogOpen\n    });\n  }\n\n  render() {\n    const {\n      loading, errorMsg,\n      avatar_url, email, contact_email,\n      name, quota_total, quota_usage\n    } = this.props.data;\n    const { isSetNameDialogOpen, isSetContactEmailDialogOpen, isSetQuotaDialogOpen } = this.state;\n\n    if (loading) {\n      return <Loading />;\n    }\n    if (errorMsg) {\n      return <p className=\"error text-center\">{errorMsg}</p>;\n    }\n\n    return (\n      <Fragment>\n        <dl>\n          <dt>{gettext('Avatar')}</dt>\n          <dd>\n            <img src={avatar_url} width=\"48\" height=\"48\" className=\"rounded\" alt=\"\" />\n          </dd>\n\n          <dt>ID</dt>\n          <dd>{email}</dd>\n\n          <dt>{gettext('Name')}</dt>\n          <dd>\n            {name || '--'}\n            <span title={gettext('Edit')} className=\"attr-action-icon fa fa-pencil-alt\" onClick={this.toggleSetNameDialog}></span>\n          </dd>\n\n          <dt>{gettext('Contact Email')}</dt>\n          <dd>\n            {contact_email || '--'}\n            <span title={gettext('Edit')} className=\"attr-action-icon fa fa-pencil-alt\" onClick={this.toggleSetContactEmailDialog}></span>\n          </dd>\n\n          <dt>{gettext('Organization')}</dt>\n          <dd>{orgName}</dd>\n\n          <dt>{gettext('Space Used / Quota')}</dt>\n          <dd>\n            {`${Utils.bytesToSize(quota_usage)}${quota_total > 0 ? ' / ' + Utils.bytesToSize(quota_total) : ''}`}\n            <span title={gettext('Edit')} className=\"attr-action-icon fa fa-pencil-alt\" onClick={this.toggleSetQuotaDialog}></span>\n          </dd>\n        </dl>\n        {isSetNameDialogOpen &&\n        <SetOrgUserName\n          orgID={orgID}\n          email={email}\n          name={name}\n          updateName={this.props.updateName}\n          toggleDialog={this.toggleSetNameDialog}\n        />\n        }\n        {isSetContactEmailDialogOpen &&\n        <SetOrgUserContactEmail\n          orgID={orgID}\n          email={email}\n          contactEmail={contact_email}\n          updateContactEmail={this.props.updateContactEmail}\n          toggleDialog={this.toggleSetContactEmailDialog}\n        />\n        }\n        {isSetQuotaDialogOpen &&\n        <SetOrgUserQuota\n          orgID={orgID}\n          email={email}\n          quotaTotal={quota_total}\n          updateQuota={this.props.updateQuota}\n          toggleDialog={this.toggleSetQuotaDialog}\n        />\n        }\n      </Fragment>\n    );\n  }\n}\n\nexport default OrgUserProfile;\n","import React, { Component, Fragment } from 'react';\nimport moment from 'moment';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { gettext } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport Loading from '../../components/loading';\nimport toaster from '../../components/toast';\nimport OrgAdminUserNav from '../../components/org-admin-user-nav';\nimport DeleteRepoDialog from '../../components/dialog/delete-repo-dialog';\nimport MainPanelTopbar from './main-panel-topbar';\n\nimport '../../css/org-admin-user.css';\n\nconst { orgID } = window.org.pageOptions;\n\nclass OrgUserOwnedRepos extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      errorMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.orgAdminGetOrgUserOwnedRepos(orgID, this.props.email).then((res) => {\n      this.setState(Object.assign({\n        loading: false\n      }, res.data));\n    }).catch((error) => {\n      this.setState({\n        loading: false,\n        errorMsg: Utils.getErrorMsg(error, true) // true: show login tip if 403\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <MainPanelTopbar/>\n        <div className=\"main-panel-center flex-row\">\n          <div className=\"cur-view-container\">\n            <OrgAdminUserNav email={this.props.email} currentItem='owned-repos' />\n            <div className=\"cur-view-content\">\n              <Content\n                data={this.state}\n              />\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nclass Content extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      loading, errorMsg, repo_list\n    } = this.props.data;\n\n    if (loading) {\n      return <Loading />;\n    }\n    if (errorMsg) {\n      return <p className=\"error text-center\">{errorMsg}</p>;\n    }\n\n    return (\n      <Fragment>\n        <table className=\"table-hover\">\n          <thead>\n            <tr>\n              <th width=\"4%\">{/*icon*/}</th>\n              <th width=\"35%\">{gettext('Name')}</th>\n              <th width=\"16%\">{gettext('Size')}</th>\n              <th width=\"25%\">{gettext('Last Update')}</th>\n              <th width=\"20%\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {repo_list.map((item, index) => {\n              return <Item key={index} data={item} />;\n            })}\n          </tbody>\n        </table>\n      </Fragment>\n    );\n  }\n}\n\nclass Item extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpIconShown: false,\n      deleted: false,\n      isDeleteRepoDialogOpen: false,\n      isRepoDeleted: false,\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({\n      isOpIconShown: true\n    });\n  }\n\n  handleMouseOut = () => {\n    this.setState({\n      isOpIconShown: false\n    });\n  }\n\n  handleDeleteIconClick = (e) => {\n    e.preventDefault();\n    this.toggleDeleteRepoDialog();\n  }\n\n  toggleDeleteRepoDialog = () => {\n    this.setState({\n      isDeleteRepoDialogOpen: !this.state.isDeleteRepoDialogOpen\n    });\n  }\n\n  deleteRepo = () => {\n    const repo = this.props.data;\n    seafileAPI.orgAdminDeleteOrgRepo(orgID, repo.repo_id).then((res) => {\n      this.setState({\n        deleted: true,\n        isRepoDeleted: true,\n      });\n      const msg = gettext('Successfully deleted {name}.').replace('{name}', repo.repo_name);\n      toaster.success(msg);\n    }).catch((error) => {\n      const errorMsg = Utils.getErrorMsg(error);\n      toaster.danger(errorMsg);\n\n      this.setState({isRepoDeleted: false});\n    });\n  }\n\n  render() {\n    const { deleted, isOpIconShown, isDeleteRepoDialogOpen } = this.state;\n    const repo = this.props.data;\n\n    if (deleted) {\n      return null;\n    }\n\n    return (\n      <Fragment>\n        <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\n          <td>\n            <img src={Utils.getLibIconUrl(repo, false)} alt={Utils.getLibIconTitle(repo)} title={Utils.getLibIconTitle(repo)} width=\"24\" />\n          </td>\n          <td>{repo.repo_name}</td>\n          <td>{Utils.bytesToSize(repo.size)}</td>\n          <td title={moment(repo.last_modified).format('LLLL')}>{moment(repo.last_modified).format('YYYY-MM-DD')}</td>\n          <td>\n            <a href=\"#\" className={`action-icon sf2-icon-delete${isOpIconShown ? '' : ' invisible'}`} title={gettext('Delete')} onClick={this.handleDeleteIconClick}></a>\n          </td>\n        </tr>\n        {isDeleteRepoDialogOpen && (\n          <DeleteRepoDialog\n            repo={repo}\n            isRepoDeleted={this.state.isRepoDeleted}\n            onDeleteRepo={this.deleteRepo}\n            toggle={this.toggleDeleteRepoDialog}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default OrgUserOwnedRepos;\n","import React, { Component, Fragment } from 'react';\nimport moment from 'moment';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { gettext } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport Loading from '../../components/loading';\nimport OrgAdminUserNav from '../../components/org-admin-user-nav';\nimport MainPanelTopbar from './main-panel-topbar';\n\nimport '../../css/org-admin-user.css';\n\nconst { orgID } = window.org.pageOptions;\n\nclass OrgUserSharedRepos extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      errorMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.orgAdminGetOrgUserBesharedRepos(orgID, this.props.email).then((res) => {\n      this.setState(Object.assign({\n        loading: false\n      }, res.data));\n    }).catch((error) => {\n      this.setState({\n        loading: false,\n        errorMsg: Utils.getErrorMsg(error, true) // true: show login tip if 403\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <MainPanelTopbar/>\n        <div className=\"main-panel-center flex-row\">\n          <div className=\"cur-view-container\">\n            <OrgAdminUserNav email={this.props.email} currentItem='shared-repos' />\n            <div className=\"cur-view-content\">\n              <Content\n                data={this.state}\n              />\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nclass Content extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      loading, errorMsg, repo_list\n    } = this.props.data;\n\n    if (loading) {\n      return <Loading />;\n    }\n    if (errorMsg) {\n      return <p className=\"error text-center\">{errorMsg}</p>;\n    }\n\n    return (\n      <table className=\"table-hover\">\n        <thead>\n          <tr>\n            <th width=\"4%\">{/*icon*/}</th>\n            <th width=\"30%\">{gettext('Name')}</th>\n            <th width=\"26%\">{gettext('Owner')}</th>\n            <th width=\"15%\">{gettext('Size')}</th>\n            <th width=\"25%\">{gettext('Last Update')}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {repo_list.map((item, index) => {\n            return <Item key={index} data={item} />;\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nclass Item extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const repo = this.props.data;\n    return (\n      <tr>\n        <td>\n          <img src={Utils.getLibIconUrl(repo, false)} alt={Utils.getLibIconTitle(repo)} title={Utils.getLibIconTitle(repo)} width=\"24\" />\n        </td>\n        <td>{repo.repo_name}</td>\n        <td>{repo.owner_name}</td>\n        <td>{Utils.bytesToSize(repo.size)}</td>\n        <td title={moment(repo.last_modified).format('LLLL')}>{moment(repo.last_modified).format('YYYY-MM-DD')}</td>\n      </tr>\n    );\n  }\n}\n\nexport default OrgUserSharedRepos;\n","import { lang } from '../utils/constants';\nimport moment from 'moment';\n\nmoment.locale(lang);\n\nclass OrgGroupInfo {\n  constructor(object) {\n    this.id = object.id;\n    this.groupName = object.group_name;\n    this.creatorName = object.creator_name;\n    this.creatorEmail = object.creator_email;\n    this.creatorContactEmail = object.creator_contact_email;\n    this.ctime = moment(object.ctime).format('YYYY-MM-DD HH:mm:ss');\n  }\n}\n\nexport default OrgGroupInfo;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { siteRoot, gettext, orgID } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../../components/toast';\nimport OrgGroupInfo from '../../models/org-group';\nimport MainPanelTopbar from './main-panel-topbar';\n\nclass OrgGroups extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n      pageNext: false,\n      orgGroups: [],\n      isItemFreezed: false\n    };\n  }\n\n  componentDidMount() {\n    let page = this.state.page;\n    this.initData(page);\n  }\n\n  initData = (page) => {\n    seafileAPI.orgAdminListOrgGroups(orgID, page).then(res => {\n      let orgGroups = res.data.groups.map(item => {\n        return new OrgGroupInfo(item);\n      });\n\n      this.setState({\n        orgGroups: orgGroups,\n        pageNext: res.data.page_next,\n        page: res.data.page,\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n\n  onChangePageNum = (e, num) => {\n    e.preventDefault();\n    let page = this.state.page;\n\n    if (num == 1) {\n      page = page + 1;\n    } else {\n      page = page - 1;\n    }\n    this.initData(page);\n  }\n\n  onFreezedItem = () => {\n    this.setState({isItemFreezed: true});\n  }\n\n  onUnfreezedItem = () => {\n    this.setState({isItemFreezed: false});\n  }\n\n  deleteGroupItem = (group) => {\n    seafileAPI.orgAdminDeleteOrgGroup(orgID, group.id).then(res => {\n      this.setState({\n        orgGroups: this.state.orgGroups.filter(item => item.id != group.id)\n      });\n      let msg = gettext('Successfully deleted {name}');\n      msg = msg.replace('{name}', group.groupName);\n      toaster.success(msg);\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    let groups = this.state.orgGroups;\n    return (\n      <Fragment>\n        <MainPanelTopbar/>\n        <div className=\"main-panel-center flex-row\">\n          <div className=\"cur-view-container\">\n            <div className=\"cur-view-path\">\n              <h3 className=\"sf-heading\">{gettext('All Groups')}</h3>\n            </div>\n            <div className=\"cur-view-content\">\n              <table>\n                <thead>\n                  <tr>\n                    <th width=\"30%\">{gettext('Name')}</th>\n                    <th width=\"35%\">{gettext('Creator')}</th>\n                    <th width=\"23%\">{gettext('Created At')}</th>\n                    <th width=\"12%\" className=\"text-center\">{gettext('Operations')}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {groups.map(item => {\n                    return (\n                      <GroupItem\n                        key={item.id}\n                        group={item}\n                        isItemFreezed={this.state.isItemFreezed}\n                        onFreezedItem={this.onFreezedItem}\n                        onUnfreezedItem={this.onUnfreezedItem}\n                        deleteGroupItem={this.deleteGroupItem}\n                      />\n                    );\n                  })}\n                </tbody>\n              </table>\n              <div className=\"paginator\">\n                {this.state.page != 1 && <a href=\"#\" onClick={(e) => this.onChangePageNum(e, -1)}>{gettext('Previous')}</a>}\n                {(this.state.page != 1 && this.state.pageNext) && <span> | </span>}\n                {this.state.pageNext && <a href=\"#\" onClick={(e) => this.onChangePageNum(e, 1)}>{gettext('Next')}</a>}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst GroupItemPropTypes = {\n  group: PropTypes.object.isRequired,\n  isItemFreezed: PropTypes.bool.isRequired,\n  onFreezedItem: PropTypes.func.isRequired,\n  onUnfreezedItem: PropTypes.func.isRequired,\n  deleteGroupItem: PropTypes.func.isRequired,\n};\n\nclass GroupItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlight: false,\n      showMenu: false,\n      isItemMenuShow: false\n    };\n  }\n\n  onMouseEnter = () => {\n    if (!this.props.isItemFreezed) {\n      this.setState({\n        showMenu: true,\n        highlight: true,\n      });\n    }\n  }\n\n  onMouseLeave = () => {\n    if (!this.props.isItemFreezed) {\n      this.setState({\n        showMenu: false,\n        highlight: false\n      });\n    }\n  }\n\n  onDropdownToggleClick = (e) => {\n    e.preventDefault();\n    this.toggleOperationMenu(e);\n  }\n\n  toggleOperationMenu = (e) => {\n    e.stopPropagation();\n    this.setState(\n      {isItemMenuShow: !this.state.isItemMenuShow }, () => {\n        if (this.state.isItemMenuShow) {\n          this.props.onFreezedItem();\n        } else {\n          this.setState({\n            highlight: false,\n            showMenu: false,\n          });\n          this.props.onUnfreezedItem();\n        }\n      }\n    );\n  }\n\n  toggleDelete = () => {\n    this.props.deleteGroupItem(this.props.group);\n  }\n\n  renderGroupHref = (group) => {\n    let groupInfoHref;\n    if (group.creatorName == 'system admin') {\n      groupInfoHref = siteRoot + 'org/departmentadmin/groups/' + group.id + '/';\n    } else {\n      groupInfoHref = siteRoot + 'org/groupadmin/' + group.id + '/';\n    }\n\n    return groupInfoHref;\n  }\n\n  renderGroupCreator = (group) => {\n    let userInfoHref = siteRoot + 'org/useradmin/info/' + group.creatorEmail + '/';\n    if (group.creatorName == 'system admin') {\n      return (\n        <td> -- </td>\n      );\n    } else {\n      return(\n        <td>\n          <a href={userInfoHref} className=\"font-weight-normal\">{group.creatorName}</a>\n        </td>\n      );\n    }\n  }\n\n  render() {\n    let { group } = this.props;\n    let isOperationMenuShow = (group.creatorName != 'system admin') && this.state.showMenu;\n    return (\n      <tr className={this.state.highlight ? 'tr-highlight' : ''} onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n        <td>\n          <a href={this.renderGroupHref(group)} className=\"font-weight-normal\">{group.groupName}</a>\n        </td>\n        {this.renderGroupCreator(group)}\n        <td>{group.ctime}</td>\n        <td className=\"text-center cursor-pointer\">\n          {isOperationMenuShow &&\n            <Dropdown isOpen={this.state.isItemMenuShow} toggle={this.toggleOperationMenu}>\n              <DropdownToggle\n                tag=\"a\"\n                className=\"attr-action-icon fas fa-ellipsis-v\"\n                title={gettext('More Operations')}\n                data-toggle=\"dropdown\"\n                aria-expanded={this.state.isItemMenuShow}\n                onClick={this.onDropdownToggleClick}\n              />\n              <DropdownMenu>\n                <DropdownItem onClick={this.toggleDelete}>{gettext('Delete')}</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n          }\n        </td>\n      </tr>\n    );\n  }\n\n}\n\nGroupItem.propTypes = GroupItemPropTypes;\n\nexport default OrgGroups;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from '@reach/router';\nimport { siteRoot, gettext } from '../utils/constants';\n\nconst propTypes = {\n  groupID: PropTypes.string.isRequired,\n  currentItem: PropTypes.string.isRequired\n};\n\nclass OrgAdminGroupNav extends React.Component {\n\n  render() {\n    const { groupID, currentItem } = this.props;\n    const urlBase = `${siteRoot}org/groupadmin/${groupID}/`;\n    return (\n      <div className=\"cur-view-path org-admin-user-nav\">\n        <ul className=\"nav\">\n          <li className=\"nav-item\">\n            <Link to={urlBase} className={`nav-link${currentItem == 'info' ? ' active' : ''}`}>{gettext('Group Info')}</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={`${urlBase}repos/`} className={`nav-link${currentItem == 'repos' ? ' active' : ''}`}>{gettext('Libraries')}</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={`${urlBase}members/`} className={`nav-link${currentItem == 'members' ? ' active' : ''}`}>{gettext('Members')}</Link>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nOrgAdminGroupNav.propTypes = propTypes;\n\nexport default OrgAdminGroupNav;\n","import React, { Component, Fragment } from 'react';\nimport { Link } from '@reach/router';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport Loading from '../../components/loading';\nimport OrgAdminGroupNav from '../../components/org-admin-group-nav';\nimport MainPanelTopbar from './main-panel-topbar';\n\nimport '../../css/org-admin-user.css';\n\nconst { orgID } = window.org.pageOptions;\n\nclass OrgGroupInfo extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      errorMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.orgAdminGetGroup(orgID, this.props.groupID).then((res) => {\n      this.setState(Object.assign({\n        loading: false\n      }, res.data));\n    }).catch((error) => {\n      this.setState({\n        loading: false,\n        errorMsg: Utils.getErrorMsg(error, true) // true: show login tip if 403\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <MainPanelTopbar/>\n        <div className=\"main-panel-center flex-row\">\n          <div className=\"cur-view-container\">\n            <OrgAdminGroupNav groupID={this.props.groupID} currentItem='info' />\n            <div className=\"cur-view-content\">\n              <Content\n                data={this.state}\n              />\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nclass Content extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const {\n      loading, errorMsg,\n      group_name, creator_email, creator_name\n    } = this.props.data;\n\n    if (loading) {\n      return <Loading />;\n    }\n    if (errorMsg) {\n      return <p className=\"error text-center mt-2\">{errorMsg}</p>;\n    }\n\n    return (\n      <dl>\n        <dt>{gettext('Name')}</dt>\n        <dd>{group_name}</dd>\n\n        <dt>{gettext('Creator')}</dt>\n        <dd>\n          <Link to={`${siteRoot}org/useradmin/info/${encodeURIComponent(creator_email)}/`}>{creator_name}</Link>\n        </dd>\n      </dl>\n    );\n  }\n}\n\nexport default OrgGroupInfo;\n","import React, { Component, Fragment } from 'react';\nimport { Link } from '@reach/router';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport Loading from '../../components/loading';\nimport toaster from '../../components/toast';\nimport OrgAdminGroupNav from '../../components/org-admin-group-nav';\nimport DeleteRepoDialog from '../../components/dialog/delete-repo-dialog';\nimport MainPanelTopbar from './main-panel-topbar';\n\nimport '../../css/org-admin-user.css';\n\nconst { orgID } = window.org.pageOptions;\n\nclass OrgGroupRepos extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      errorMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.orgAdminListGroupRepos(orgID, this.props.groupID).then((res) => {\n      this.setState(Object.assign({\n        loading: false\n      }, res.data));\n    }).catch((error) => {\n      this.setState({\n        loading: false,\n        errorMsg: Utils.getErrorMsg(error, true) // true: show login tip if 403\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <MainPanelTopbar/>\n        <div className=\"main-panel-center flex-row\">\n          <div className=\"cur-view-container\">\n            <OrgAdminGroupNav groupID={this.props.groupID} currentItem='repos' />\n            <div className=\"cur-view-content\">\n              <Content\n                data={this.state}\n              />\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nclass Content extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      loading, errorMsg, libraries\n    } = this.props.data;\n\n    if (loading) {\n      return <Loading />;\n    }\n    if (errorMsg) {\n      return <p className=\"error text-center mt-2\">{errorMsg}</p>;\n    }\n\n    return (\n      <Fragment>\n        <table className=\"table-hover\">\n          <thead>\n            <tr>\n              <th width=\"4%\">{/*icon*/}</th>\n              <th width=\"35%\">{gettext('Name')}</th>\n              <th width=\"20%\">{gettext('Size')}</th>\n              <th width=\"26%\">{gettext('Shared By')}</th>\n              <th width=\"15%\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {libraries.map((item, index) => {\n              return <Item key={index} data={item} />;\n            })}\n          </tbody>\n        </table>\n      </Fragment>\n    );\n  }\n}\n\nclass Item extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpIconShown: false,\n      deleted: false,\n      isDeleteRepoDialogOpen: false,\n      isRepoDeleted: false,\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({\n      isOpIconShown: true\n    });\n  }\n\n  handleMouseOut = () => {\n    this.setState({\n      isOpIconShown: false\n    });\n  }\n\n  handleDeleteIconClick = (e) => {\n    e.preventDefault();\n    this.toggleDeleteRepoDialog();\n  }\n\n  toggleDeleteRepoDialog = () => {\n    this.setState({\n      isDeleteRepoDialogOpen: !this.state.isDeleteRepoDialogOpen\n    });\n  }\n\n  deleteRepo = () => {\n    const repo = this.props.data;\n    seafileAPI.orgAdminDeleteOrgRepo(orgID, repo.repo_id).then((res) => {\n      this.setState({\n        deleted: true,\n        isRepoDeleted: true,\n      });\n      const msg = gettext('Successfully deleted {name}.').replace('{name}', repo.name);\n      toaster.success(msg);\n    }).catch((error) => {\n      const errorMsg = Utils.getErrorMsg(error);\n      toaster.danger(errorMsg);\n\n      this.setState({isRepoDeleted: false});\n    });\n  }\n\n  render() {\n    const { deleted, isOpIconShown, isDeleteRepoDialogOpen } = this.state;\n    const repo = this.props.data;\n\n    if (deleted) {\n      return null;\n    }\n\n    return (\n      <Fragment>\n        <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\n          <td>\n            <img src={Utils.getLibIconUrl(repo, false)} alt={Utils.getLibIconTitle(repo)} title={Utils.getLibIconTitle(repo)} width=\"24\" />\n          </td>\n          <td>{repo.name}</td>\n          <td>{Utils.bytesToSize(repo.size)}</td>\n          <td><Link to={`${siteRoot}org/useradmin/info/${encodeURIComponent(repo.shared_by)}/`}>{repo.shared_by_name}</Link></td>\n          <td>\n            <a href=\"#\" className={`action-icon sf2-icon-delete${isOpIconShown ? '' : ' invisible'}`} title={gettext('Delete')} onClick={this.handleDeleteIconClick}></a>\n          </td>\n        </tr>\n        {isDeleteRepoDialogOpen && (\n          <DeleteRepoDialog\n            repo={repo}\n            isRepoDeleted={this.state.isRepoDeleted}\n            onDeleteRepo={this.deleteRepo}\n            toggle={this.toggleDeleteRepoDialog}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default OrgGroupRepos;\n","import React, { Component, Fragment } from 'react';\nimport { Link } from '@reach/router';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport Loading from '../../components/loading';\nimport OrgAdminGroupNav from '../../components/org-admin-group-nav';\nimport MainPanelTopbar from './main-panel-topbar';\n\nimport '../../css/org-admin-user.css';\n\nconst { orgID } = window.org.pageOptions;\n\nclass OrgGroupMembers extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      errorMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.orgAdminListGroupMembers(orgID, this.props.groupID).then((res) => {\n      this.setState(Object.assign({\n        loading: false\n      }, res.data));\n    }).catch((error) => {\n      this.setState({\n        loading: false,\n        errorMsg: Utils.getErrorMsg(error, true) // true: show login tip if 403\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <MainPanelTopbar/>\n        <div className=\"main-panel-center flex-row\">\n          <div className=\"cur-view-container\">\n            <OrgAdminGroupNav groupID={this.props.groupID} currentItem='members' />\n            <div className=\"cur-view-content\">\n              <Content\n                data={this.state}\n              />\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nclass Content extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      loading, errorMsg, members\n    } = this.props.data;\n\n    if (loading) {\n      return <Loading />;\n    }\n    if (errorMsg) {\n      return <p className=\"error text-center mt-2\">{errorMsg}</p>;\n    }\n\n    return (\n      <Fragment>\n        <table className=\"table-hover\">\n          <thead>\n            <tr>\n              <th width=\"10%\"></th>\n              <th width=\"50%\">{gettext('Name')}</th>\n              <th width=\"40%\">{gettext('Role')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {members.map((item, index) => {\n              return <Item key={index} data={item} />;\n            })}\n          </tbody>\n        </table>\n      </Fragment>\n    );\n  }\n}\n\nclass Item extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  getRoleText() {\n    switch (this.props.data.role) {\n      case 'Owner':\n        return gettext('Owner');\n      case 'Admin':\n        return gettext('Admin');\n      case 'Member':\n        return gettext('Member');\n    }\n  }\n\n  render() {\n    const item = this.props.data;\n    return (\n      <Fragment>\n        <tr>\n          <td className=\"text-center\">\n            <img src={item.avatar_url} alt=\"\" className=\"avatar\" width=\"32\" />\n          </td>\n          <td>\n            <Link to={`${siteRoot}org/useradmin/info/${encodeURIComponent(item.email)}/`}>{item.name}</Link>\n          </td>\n          <td>\n            {this.getRoleText()}\n          </td>\n        </tr>\n      </Fragment>\n    );\n  }\n}\n\nexport default OrgGroupMembers;\n","class OrgAdminRepo {\n  constructor(object) {\n    this.repoID = object.repo_id;\n    this.repoName = object.repo_name;\n    this.ownerName = object.owner_name;\n    this.ownerEmail = object.owner_email;\n    this.size = object.size;\n    this.file_count = object.file_count;\n    this.encrypted = object.encrypted;\n    this.isDepartmentRepo = object.is_department_repo;\n    this.groupID = object.group_id;\n  }\n}\n\nexport default OrgAdminRepo;\n","import React, { Fragment, Component } from 'react';\nimport { navigate } from '@reach/router';\nimport PropTypes from 'prop-types';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport MainPanelTopbar from './main-panel-topbar';\nimport OrgAdminRepo from '../../models/org-admin-repo';\nimport toaster from '../../components/toast';\nimport TransferDialog from '../../components/dialog/transfer-dialog';\nimport ModalPortal from '../../components/modal-portal';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport { mediaUrl, siteRoot, gettext, orgID } from '../../utils/constants';\n\nclass OrgLibraries extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n      pageNext: false,\n      orgRepos: [],\n      sortBy: '',\n      isItemFreezed: false\n    };\n  }\n\n  componentDidMount() {\n    let urlParams = (new URL(window.location)).searchParams;\n    const { page, /*currentPage = 1, perPage, */sortBy } = this.state;\n    this.setState({\n      sortBy: urlParams.get('order_by') || sortBy,\n      //perPage: parseInt(urlParams.get('per_page') || perPage),\n      //currentPage: parseInt(urlParams.get('page') || currentPage)\n      page: parseInt(urlParams.get('page') || page)\n    }, () => {\n      this.listRepos(this.state.page);\n    });\n  }\n\n  listRepos = (page) => {\n    seafileAPI.orgAdminListOrgRepos(orgID, page, this.state.sortBy).then(res => {\n      let orgRepos = res.data.repo_list.map(item => {\n        return new OrgAdminRepo(item);\n      });\n\n      this.setState({\n        orgRepos: orgRepos,\n        pageNext: res.data.page_next,\n        page: res.data.page,\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n\n  onChangePageNum = (e, num) => {\n    e.preventDefault();\n    let page = this.state.page;\n\n    if (num == 1) {\n      page = page + 1;\n    } else {\n      page = page - 1;\n    }\n    this.listRepos(page);\n  }\n\n  onFreezedItem = () => {\n    this.setState({isItemFreezed: true});\n  }\n\n  onUnfreezedItem = () => {\n    this.setState({isItemFreezed: false});\n  }\n\n  deleteRepoItem = (repo) => {\n    seafileAPI.orgAdminDeleteOrgRepo(orgID, repo.repoID).then(res => {\n      this.setState({\n        orgRepos: this.state.orgRepos.filter(item => item.repoID != repo.repoID)\n      });\n      let msg = gettext('Successfully deleted {name}');\n      msg = msg.replace('{name}', repo.repoName);\n      toaster.success(msg);\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  transferRepoItem = (repoID, user) => {\n    this.setState({\n      orgRepos: this.state.orgRepos.map(item =>{\n        if (item.repoID == repoID) {\n          item.ownerEmail = user.email;\n          item.ownerName = user.value;\n        }\n        return item;\n      })\n    });\n  }\n\n  sortItems = (sortBy) => {\n    this.setState({\n      page: 1,\n      sortBy: sortBy\n    }, () => {\n      let url = new URL(location.href);\n      let searchParams = new URLSearchParams(url.search);\n      const { page, sortBy } = this.state;\n      searchParams.set('page', page);\n      searchParams.set('order_by', sortBy);\n      url.search = searchParams.toString();\n      navigate(url.toString());\n      this.listRepos(page);\n    });\n  }\n\n  sortByFileCount = (e) => {\n    e.preventDefault();\n    this.sortItems('file_count');\n  }\n\n  sortBySize = (e) => {\n    e.preventDefault();\n    this.sortItems('size');\n  }\n\n  render() {\n    const { orgRepos, sortBy } = this.state;\n    const initialSortIcon = <span className=\"fas fa-sort\"></span>;\n    const sortIcon = <span className=\"fas fa-caret-down\"></span>;\n    return (\n      <Fragment>\n        <MainPanelTopbar />\n        <div className=\"main-panel-center flex-row\">\n          <div className=\"cur-view-container\">\n            <div className=\"cur-view-path\">\n              <h3 className=\"sf-heading\">{gettext('All Libraries')}</h3>\n            </div>\n            <div className=\"cur-view-content\">\n              <table>\n                <thead>\n                  <tr>\n                    <th width=\"5%\">{/*icon*/}</th>\n                    <th width=\"25%\">{gettext('Name')}</th>\n                    <th width=\"15%\">\n                      <a className=\"d-inline-block table-sort-op\" href=\"#\" onClick={this.sortByFileCount}>{gettext('Files')} {sortBy == 'file_count' ? sortIcon : initialSortIcon}</a>{' / '}\n                      <a className=\"d-inline-block table-sort-op\" href=\"#\" onClick={this.sortBySize}>{gettext('Size')} {sortBy == 'size' ? sortIcon : initialSortIcon}</a>\n                    </th>\n                    <th width=\"32%\">ID</th>\n                    <th width=\"18%\">{gettext('Owner')}</th>\n                    <th width=\"5%\">{/*Operations*/}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {orgRepos.map(item => {\n                    return (\n                      <RepoItem\n                        key={item.repoID}\n                        repo={item}\n                        isItemFreezed={this.state.isItemFreezed}\n                        onFreezedItem={this.onFreezedItem}\n                        onUnfreezedItem={this.onUnfreezedItem}\n                        deleteRepoItem={this.deleteRepoItem}\n                        transferRepoItem={this.transferRepoItem}\n                      />\n                    );}\n                  )}\n                </tbody>\n              </table>\n              <div className=\"paginator\">\n                {this.state.page != 1 && <a href=\"#\" onClick={(e) => this.onChangePageNum(e, -1)}>{gettext('Previous')}</a>}\n                {(this.state.page != 1 && this.state.pageNext) && <span> | </span>}\n                {this.state.pageNext && <a href=\"#\" onClick={(e) => this.onChangePageNum(e, 1)}>{gettext('Next')}</a>}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst propTypes = {\n  repo: PropTypes.object.isRequired,\n  isItemFreezed: PropTypes.bool,\n  onFreezedItem: PropTypes.func.isRequired,\n  onUnfreezedItem: PropTypes.func.isRequired,\n  deleteRepoItem: PropTypes.func.isRequired,\n  transferRepoItem: PropTypes.func.isRequired,\n};\n\nclass RepoItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlight: false,\n      showMenu: false,\n      isItemMenuShow: false,\n      isTransferDialogShow: false\n    };\n  }\n\n  onMouseEnter = () => {\n    if (!this.props.isItemFreezed) {\n      this.setState({\n        showMenu: true,\n        highlight: true,\n      });\n    }\n  }\n\n  onMouseLeave = () => {\n    if (!this.props.isItemFreezed) {\n      this.setState({\n        showMenu: false,\n        highlight: false\n      });\n    }\n  }\n\n  onDropdownToggleClick = (e) => {\n    e.preventDefault();\n    this.toggleOperationMenu(e);\n  }\n\n  toggleOperationMenu = (e) => {\n    e.stopPropagation();\n    this.setState(\n      {isItemMenuShow: !this.state.isItemMenuShow }, () => {\n        if (this.state.isItemMenuShow) {\n          this.props.onFreezedItem();\n        } else {\n          this.setState({\n            highlight: false,\n            showMenu: false,\n          });\n          this.props.onUnfreezedItem();\n        }\n      }\n    );\n  }\n\n  toggleDelete = () => {\n    this.props.deleteRepoItem(this.props.repo);\n  }\n\n  toggleTransfer = () => {\n    this.props.transferRepoItem(this.props.repo);\n  }\n\n  renderLibIcon = (repo) => {\n    let href;\n    let iconTitle;\n    if (repo.encrypted) {\n      href = mediaUrl + 'img/lib/48/lib-encrypted.png';\n      iconTitle = gettext('Encrypted library');\n    } else {\n      href = mediaUrl + 'img/lib/48/lib.png';\n      iconTitle = gettext('Read-Write library');\n    }\n    return <img src={href} title={iconTitle} alt={iconTitle} width=\"24\" />;\n  }\n\n  renderRepoOwnerHref = (repo) => {\n    let href;\n    if (repo.isDepartmentRepo) {\n      href = siteRoot + 'org/admin/#address-book/groups/' + repo.groupID + '/';\n    } else {\n      href = siteRoot + 'org/useradmin/info/' + repo.ownerEmail + '/';\n    }\n    return href;\n  }\n\n  toggleTransfer = () => {\n    this.setState({isTransferDialogShow: !this.state.isTransferDialogShow});\n  }\n\n  onTransferRepo = (user) => {\n    let repo = this.props.repo;\n    seafileAPI.orgAdminTransferOrgRepo(orgID, repo.repoID, user.email).then(res => {\n      this.props.transferRepoItem(repo.repoID, user);\n      let msg = gettext('Successfully transferred the library.');\n      toaster.success(msg);\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n    this.toggleTransfer();\n  }\n\n  render() {\n    let { repo } = this.props;\n\n    let isOperationMenuShow = this.state.showMenu && !repo.isDepartmentRepo;\n    return (\n      <Fragment>\n        <tr className={this.state.highlight ? 'tr-highlight' : ''} onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n          <td>{this.renderLibIcon(repo)}</td>\n          <td>{repo.repoName}</td>\n          <td>{`${repo.file_count} / ${Utils.bytesToSize(repo.size)}`}</td>\n          <td>{repo.repoID}</td>\n          <td><a href={this.renderRepoOwnerHref(repo)}>{repo.ownerName}</a></td>\n          <td className=\"text-center cursor-pointer\">\n            {isOperationMenuShow &&\n              <Dropdown isOpen={this.state.isItemMenuShow} toggle={this.toggleOperationMenu}>\n                <DropdownToggle\n                  tag=\"a\"\n                  className=\"attr-action-icon fas fa-ellipsis-v\"\n                  title={gettext('More Operations')}\n                  data-toggle=\"dropdown\"\n                  aria-expanded={this.state.isItemMenuShow}\n                  onClick={this.onDropdownToggleClick}\n                />\n                <DropdownMenu>\n                  <DropdownItem onClick={this.toggleDelete}>{gettext('Delete')}</DropdownItem>\n                  <DropdownItem onClick={this.toggleTransfer}>{gettext('Transfer')}</DropdownItem>\n                </DropdownMenu>\n              </Dropdown>\n            }\n          </td>\n        </tr>\n        {this.state.isTransferDialogShow && (\n          <ModalPortal>\n            <TransferDialog\n              itemName={repo.repoName}\n              submit={this.onTransferRepo}\n              toggleDialog={this.toggleTransfer}\n            />\n          </ModalPortal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nRepoItem.propTypes = propTypes;\n\nexport default OrgLibraries;\n","import React, { Component, Fragment } from 'react';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { gettext, orgMemberQuotaEnabled} from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport MainPanelTopbar from './main-panel-topbar';\n\nclass OrgInfo extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      storage_quota: 0,\n      storage_usage: 0,\n      member_quota: 0,\n      member_usage: 0,\n      active_members: 0\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.orgAdminGetOrgInfo().then(res => {\n      this.setState({\n        storage_quota: res.data.storage_quota,\n        storage_usage: res.data.storage_usage,\n        member_quota: res.data.member_quota,\n        member_usage: res.data.member_usage,\n        active_members: res.data.active_members\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <MainPanelTopbar/>\n        <div className=\"main-panel-center flex-row\">\n          <div className=\"cur-view-container\">\n            <div className=\"cur-view-path\">\n              <h3 className=\"sf-heading\">{gettext('Info')}</h3>\n            </div>\n            <div className=\"cur-view-content\">\n              <dl>\n                <dt>{gettext('Space Used')}</dt>\n\n                {(this.state.storage_quota > 0) ? <dd>{Utils.bytesToSize(this.state.storage_usage)} / {Utils.bytesToSize(this.state.storage_quota)}</dd> : <dd>{Utils.bytesToSize(this.state.storage_usage)}</dd>}\n\n                {orgMemberQuotaEnabled ? <dt>{gettext('Active Users')} / {gettext('Total Users')} / {gettext('Limits')}</dt> : <dt>{gettext('Active Users')} / {gettext('Total Users')}</dt>}\n\n                {orgMemberQuotaEnabled ? <dd>{(this.state.active_members > 0) ? this.state.active_members : '--'} / {(this.state.member_usage > 0) ? this.state.member_usage : '--'} / {(this.state.member_quota > 0) ? this.state.member_quota : '--'}</dd> : <dd>{this.state.active_members > 0 ? this.state.active_members : '--'} / {this.state.member_usage > 0 ? this.state.member_usage : '--'}</dd>}\n\n              </dl>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default OrgInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport toaster from '../toast';\nimport copy from '../copy-to-clipboard';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  currentLinkHref: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired,\n};\n\nclass ViewLinkDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  copyToClipBoard = () => {\n    copy(this.props.currentLinkHref);\n    let message = gettext('Link has been copied to clipboard');\n    toaster.success(message), {\n      duration: 2\n    };\n    this.props.toggle();\n  }\n\n  render() {\n    const href = this.props.currentLinkHref;\n    return (\n      <Modal isOpen={true} toggle={this.props.toggle}>\n        <ModalHeader toggle={this.props.toggle}>{gettext('Link')}</ModalHeader>\n        <ModalBody>\n          <p><a target=\"_blank\" href={href}>{href}</a></p>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggle}>{gettext('Cancel')}</Button>{' '}\n          <Button color=\"primary\" onClick={this.copyToClipBoard}>{gettext('Copy')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nViewLinkDialog.propTypes = propTypes;\n\nexport default ViewLinkDialog;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { siteRoot, gettext, serviceURL } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../../components/toast';\nimport MainPanelTopbar from './main-panel-topbar';\nimport ViewLinkDialog from '../../components/dialog/view-link-dialog';\n\nclass OrgLinks extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      linkList: null,\n      page: 1,\n      pageNext: false,\n      isItemFreezed: false,\n      isShowLinkDialog: false,\n      currentLinkHref: '',\n    };\n  }\n\n  listOrgLinks = (page) => {\n    seafileAPI.orgAdminListOrgLinks(this.state.page).then(res => {\n      const data = res.data;\n      this.setState({\n        linkList: data.link_list,\n        page: data.page,\n        pageNext: data.page_next,\n      });\n    });\n  }\n\n  onFreezedItem = () => {\n    this.setState({isItemFreezed: true});\n  }\n\n  onUnfreezedItem = () => {\n    this.setState({isItemFreezed: false});\n  }\n\n  onChangePageNum = (event, num) => {\n    event.preventDefault();\n    let page = this.state.page;\n    if (num == 1) {\n      page = page + 1;\n    } else {\n      page = page - 1;\n    }\n    this.listOrgLinks(page);\n  }\n\n  deleteOrgLink = (token) => {\n    seafileAPI.orgAdminDeleteOrgLink(token).then(res => {\n      if (res.data.success === true) {\n        this.listOrgLinks(this.state.page);\n      }\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  openLinkDialog = (link) => {\n    let href;\n    if (link.name.indexOf('/') > -1) {\n      href = serviceURL + '/d/' + link.token + '/';\n    } else {\n      href = serviceURL + '/f/' + link.token + '/';\n    }\n    this.setState({ currentLinkHref: href });\n    this.toggleLinkDialog();\n  }\n\n  toggleLinkDialog = () => {\n    this.setState({isShowLinkDialog: !this.state.isShowLinkDialog});\n  }\n\n  componentDidMount() {\n    this.listOrgLinks(this.state.page);\n  }\n\n  render() {\n    const linkList = this.state.linkList;\n    return (\n      <Fragment>\n        <MainPanelTopbar/>\n        <div className=\"main-panel-center flex-row\">\n          <div className=\"cur-view-container\">\n            <div className=\"cur-view-path\">\n              <h3 className=\"sf-heading\">{gettext('All Public Links')}</h3>\n            </div>\n            <div className=\"cur-view-content\">\n              <table>\n                <thead>\n                  <tr>\n                    <th width=\"50%\">{gettext('Name')}</th>\n                    <th width=\"15%\">{gettext('Owner')}</th>\n                    <th width=\"15%\">{gettext('Created At')}</th>\n                    <th width=\"10%\">{gettext('Count')}</th>\n                    <th width=\"10%\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {linkList && linkList.map((item, index) => {\n                    return(\n                      <React.Fragment key={index}>\n                        <RepoItem\n                          link={item}\n                          isItemFreezed={this.state.isItemFreezed}\n                          onFreezedItem={this.onFreezedItem}\n                          onUnfreezedItem={this.onUnfreezedItem}\n                          deleteOrgLink={this.deleteOrgLink}\n                          openLinkDialog={this.openLinkDialog}\n                        />\n                      </React.Fragment>\n                    );\n                  })}\n                </tbody>\n              </table>\n              <div className=\"paginator\">\n                {this.state.page != 1 && <a href=\"#\" onClick={(e) => this.onChangePageNum(e, -1)}>{gettext('Previous')}</a>}\n                {(this.state.page != 1 && this.state.pageNext) && <span> | </span>}\n                {this.state.pageNext && <a href=\"#\" onClick={(e) => this.onChangePageNum(e, 1)}>{gettext('Next')}</a>}\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.isShowLinkDialog &&\n          <ViewLinkDialog currentLinkHref={this.state.currentLinkHref} toggle={this.toggleLinkDialog}/>\n        }\n      </Fragment>\n    );\n  }\n}\n\nconst propTypes = {\n  link: PropTypes.object.isRequired,\n  isItemFreezed: PropTypes.bool.isRequired,\n  onFreezedItem: PropTypes.func.isRequired,\n  onUnfreezedItem: PropTypes.func.isRequired,\n  deleteOrgLink: PropTypes.func.isRequired,\n  openLinkDialog: PropTypes.func.isRequired,\n};\n\nclass RepoItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlight: false,\n      showMenu: false,\n      isItemMenuShow: false,\n    };\n  }\n\n  onMouseEnter = () => {\n    if (!this.props.isItemFreezed) {\n      this.setState({ showMenu: true, highlight: true });\n    }\n  }\n\n  onMouseLeave = () => {\n    if (!this.props.isItemFreezed) {\n      this.setState({ showMenu: false, highlight: false });\n    }\n  }\n\n  onDropdownToggleClick = (e) => {\n    e.preventDefault();\n    this.toggleOperationMenu(e);\n  }\n\n  toggleOperationMenu = (e) => {\n    e.stopPropagation();\n    this.setState(\n      {isItemMenuShow: !this.state.isItemMenuShow }, () => {\n        if (this.state.isItemMenuShow) {\n          this.props.onFreezedItem();\n        } else {\n          this.setState({\n            highlight: false,\n            showMenu: false,\n          });\n          this.props.onUnfreezedItem();\n        }\n      }\n    );\n  }\n\n  render() {\n    const { link, deleteOrgLink } = this.props;\n    const href = siteRoot + 'org/useradmin/info/' + encodeURIComponent(link.owner_email) + '/';\n    return (\n      <tr className={this.state.highlight ? 'tr-highlight' : ''} onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave} >\n        <td>{link.name}</td>\n        <td><a href={href}>{link.owner_name}</a></td>\n        <td>{moment(link.created_time).fromNow()}</td>\n        <td>{link.view_count}</td>\n        <td className=\"cursor-pointer text-center\">\n          {this.state.showMenu &&\n            <Dropdown isOpen={this.state.isItemMenuShow} toggle={this.toggleOperationMenu}>\n              <DropdownToggle\n                tag=\"a\"\n                className=\"attr-action-icon fas fa-ellipsis-v\"\n                title={gettext('More Operations')}\n                data-toggle=\"dropdown\"\n                aria-expanded={this.state.isItemMenuShow}\n                onClick={this.onDropdownToggleClick}\n              />\n              <DropdownMenu>\n                <DropdownItem onClick={deleteOrgLink.bind(this, link.token)}>{gettext('Delete')}</DropdownItem>\n                <DropdownItem onClick={this.props.openLinkDialog.bind(this, link)}>{gettext('View Link')}</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n          }\n        </td>\n      </tr>\n    );\n  }\n}\n\nRepoItem.propTypes = propTypes;\n\nexport default OrgLinks;\n","import React from 'react';\nimport '../../css/org-department-item.css';\n\nclass OrgDepartments extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"h-100 org-departments\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default OrgDepartments;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Form, FormGroup, Label } from 'reactstrap';\nimport { gettext, orgID } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\n\nconst propTypes = {\n  groupID: PropTypes.string,\n  parentGroupID: PropTypes.string,\n  toggle: PropTypes.func.isRequired,\n  onDepartChanged: PropTypes.func.isRequired,\n};\n\nclass AddDepartDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      departName: '',\n      errMessage: '',\n    };\n    this.newInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.newInput.focus();\n    this.newInput.setSelectionRange(0, 0);\n  }\n\n  handleSubmit = () => {\n    let isValid = this.validateName();\n    if (isValid) {\n      let parentGroup = -1;\n      if (this.props.parentGroupID) {\n        parentGroup = this.props.parentGroupID;\n      }\n      seafileAPI.orgAdminAddDepartGroup(orgID, parentGroup, this.state.departName.trim()).then((res) => {\n        this.props.toggle();\n        this.props.onDepartChanged();\n      }).catch(error => {\n        let errorMsg = gettext(error.response.data.error_msg);\n        this.setState({ errMessage: errorMsg });\n      });\n    }\n  }\n\n  validateName = () => {\n    let errMessage = '';\n    const name = this.state.departName.trim();\n    if (!name.length) {\n      errMessage = gettext('Name is required');\n      this.setState({ errMessage: errMessage });\n      return false;\n    }\n    return true;\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      departName: e.target.value,\n    });\n  }\n\n  handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      this.handleSubmit();\n      e.preventDefault();\n    }\n  }\n\n  render() {\n    let header = this.props.parentGroupID ? gettext('New Sub-department') : gettext('New Department');\n    return (\n      <Modal isOpen={true} toggle={this.props.toggle}>\n        <ModalHeader toggle={this.props.toggle}>{header}</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label for=\"departName\">{gettext('Name')}</Label>\n              <Input\n                id=\"departName\"\n                onKeyPress={this.handleKeyPress}\n                value={this.state.departName}\n                onChange={this.handleChange}\n                innerRef={input => {this.newInput = input;}}\n              />\n            </FormGroup>\n          </Form>\n          { this.state.errMessage && <p className=\"error\">{this.state.errMessage}</p> }\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.handleSubmit}>{gettext('Submit')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nAddDepartDialog.propTypes = propTypes;\n\nexport default AddDepartDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { gettext, orgID } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../../components/toast';\n\nconst propTypes = {\n  groupName: PropTypes.string,\n  groupID: PropTypes.number.isRequired,\n  toggle: PropTypes.func.isRequired,\n  onDepartChanged: PropTypes.func.isRequired\n};\n\nclass DeleteDepartDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  deleteDepart = () => {\n    this.props.toggle();\n    seafileAPI.orgAdminDeleteDepartGroup(orgID, this.props.groupID).then((res) => {\n      this.props.onDepartChanged();\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    let subtitle = gettext('Are you sure you want to delete {placeholder} ?');\n    subtitle = subtitle.replace('{placeholder}', '<span class=\"op-target\">' + Utils.HTMLescape(this.props.groupName) + '</span>');\n    return (\n      <Modal isOpen={true} toggle={this.props.toggle}>\n        <ModalHeader toggle={this.props.toggle}>{gettext('Delete Department')}</ModalHeader>\n        <ModalBody>\n          <p dangerouslySetInnerHTML={{__html: subtitle}}></p>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.deleteDepart}>{gettext('Delete')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nDeleteDepartDialog.propTypes = propTypes;\n\nexport default DeleteDepartDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, InputGroupAddon, InputGroup } from 'reactstrap';\nimport { gettext, orgID } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst propTypes = {\n  toggle: PropTypes.func.isRequired,\n  groupID: PropTypes.number.isRequired,\n  onDepartChanged: PropTypes.func.isRequired,\n};\n\nclass SetGroupQuotaDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      quota: '',\n      errMessage: '',\n    };\n    this.newInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.newInput.focus();\n    this.newInput.setSelectionRange(0, 0);\n  }\n\n  setGroupQuota = () => {\n    const myReg = /^[1-9]\\d*$/im;\n    let quota = this.state.quota;\n    if ((quota.length && myReg.test(quota)) || quota == -2) {\n      this.setState({ errMessage: '' });\n      let newQuota = this.state.quota == -2 ? this.state.quota : this.state.quota * 1000000;\n      seafileAPI.orgAdminSetGroupQuota(orgID, this.props.groupID, newQuota).then((res) => {\n        this.props.toggle();\n        this.props.onDepartChanged();\n      }).catch(error => {\n        let errMessage = Utils.getErrorMsg(error);\n        toaster.danger(errMessage);\n      });\n    } else {\n      const err = gettext('Quota is invalid.');\n      this.setState({ errMessage: err });\n    }\n  }\n\n  handleChange = (e) => {\n    const quota = e.target.value.trim();\n    this.setState({ quota: quota });\n  }\n\n  handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      this.setGroupQuota();\n      e.preventDefault();\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} toggle={this.props.toggle}>\n        <ModalHeader toggle={this.props.toggle}>{gettext('Set Quota')}</ModalHeader>\n        <ModalBody>\n          <InputGroup>\n            <Input\n              onKeyPress={this.handleKeyPress}\n              value={this.state.quota}\n              onChange={this.handleChange}\n              innerRef={input => {this.newInput = input;}}\n            />\n            <InputGroupAddon addonType=\"append\">{'MB'}</InputGroupAddon>\n          </InputGroup>\n          <p className=\"tip\">\n            <br/><span>{gettext('An integer that is greater than 0 or equal to -2.')}</span><br/>\n            <span>{gettext('Tip: -2 means no limit.')}</span>\n          </p>\n          { this.state.errMessage && <p className=\"error\">{this.state.errMessage}</p> }\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.setGroupQuota}>{gettext('Submit')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nSetGroupQuotaDialog.propTypes = propTypes;\n\nexport default SetGroupQuotaDialog;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Link } from '@reach/router';\nimport { Utils } from '../../utils/utils.js';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport MainPanelTopbar from './main-panel-topbar';\nimport ModalPortal from '../../components/modal-portal';\nimport AddDepartDialog from '../../components/dialog/org-add-department-dialog';\nimport DeleteDepartDialog from '../../components/dialog/org-delete-department-dialog';\nimport SetGroupQuotaDialog from '../../components/dialog/org-set-group-quota-dialog';\nimport { siteRoot, gettext, orgID, lang } from '../../utils/constants';\nimport '../../css/org-department-item.css';\n\nmoment.locale(lang);\n\nclass OrgDepartmentsList extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      groups: null,\n      groupID: '',\n      groupName: '',\n      showDeleteDepartDialog: false,\n      showSetGroupQuotaDialog: false,\n      isShowAddDepartDialog: false,\n    };\n  }\n\n  componentDidMount() {\n    this.listDepartGroups();\n  }\n\n  listDepartGroups = () => {\n    seafileAPI.orgAdminListDepartGroups(orgID).then(res => {\n      this.setState({ groups: res.data.data });\n    });\n  }\n\n  showDeleteDepartDialog = (group) => {\n    this.setState({ showDeleteDepartDialog: true, groupID: group.id, groupName: group.name });\n  }\n\n  showSetGroupQuotaDialog = (groupID) => {\n    this.setState({ showSetGroupQuotaDialog: true, groupID: groupID });\n  }\n\n  toggleAddDepartDialog = () => {\n    this.setState({ isShowAddDepartDialog: !this.state.isShowAddDepartDialog});\n  }\n\n  toggleCancel = () => {\n    this.setState({\n      showDeleteDepartDialog: false,\n      showSetGroupQuotaDialog: false,\n    });\n  }\n\n  onDepartChanged = () => {\n    this.listDepartGroups();\n  }\n\n  render() {\n    const groups = this.state.groups;\n    const topbarChildren = (\n      <Fragment>\n        <button className='btn btn-secondary operation-item' title={gettext('New Department')} onClick={this.toggleAddDepartDialog}>{gettext('New Department')}\n        </button>\n        {this.state.isShowAddDepartDialog && (\n          <ModalPortal>\n            <AddDepartDialog\n              onDepartChanged={this.onDepartChanged}\n              groupID={this.state.groupID}\n              toggle={this.toggleAddDepartDialog}\n            />\n          </ModalPortal>\n        )}\n      </Fragment>\n    );\n    return (\n      <Fragment>\n        <MainPanelTopbar children={topbarChildren}/>\n        <div className=\"main-panel-center flex-row h-100\">\n          <div className=\"cur-view-container o-auto\">\n            <div className=\"cur-view-path\">\n              <div className=\"fleft\">\n                <h3 className=\"sf-heading\">{gettext('Departments')}</h3>\n              </div>\n            </div>\n            <div className=\"cur-view-content\">\n              {groups && groups.length > 0 ?\n                <table>\n                  <thead>\n                    <tr>\n                      <th width=\"40%\">{gettext('Name')}</th>\n                      <th width=\"25%\">{gettext('Created At')}</th>\n                      <th width=\"20%\">{gettext('Quota')}</th>\n                      <th width=\"15%\"></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {groups.map((group, index) => {\n                      return(\n                        <React.Fragment key={group.id}>\n                          <GroupItem\n                            group={group}\n                            showDeleteDepartDialog={this.showDeleteDepartDialog}\n                            showSetGroupQuotaDialog={this.showSetGroupQuotaDialog}\n                          />\n                        </React.Fragment>\n                      );\n                    })}\n                  </tbody>\n                </table>\n                :\n                <p className=\"no-group\">{gettext('No departments')}</p>\n              }\n            </div>\n            <React.Fragment>\n              {this.state.showDeleteDepartDialog && (\n                <ModalPortal>\n                  <DeleteDepartDialog\n                    toggle={this.toggleCancel}\n                    groupID={this.state.groupID}\n                    groupName={this.state.groupName}\n                    onDepartChanged={this.onDepartChanged}\n                  />\n                </ModalPortal>\n              )}\n              {this.state.showSetGroupQuotaDialog && (\n                <ModalPortal>\n                  <SetGroupQuotaDialog\n                    toggle={this.toggleCancel}\n                    groupID={this.state.groupID}\n                    onDepartChanged={this.onDepartChanged}\n                  />\n                </ModalPortal>\n              )}\n            </React.Fragment>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nclass GroupItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlight: false,\n    };\n  }\n\n  onMouseEnter = () => {\n    this.setState({ highlight: true });\n  }\n\n  onMouseLeave = () => {\n    this.setState({ highlight: false });\n  }\n\n  render() {\n    const group = this.props.group;\n    const highlight = this.state.highlight;\n    const newHref = siteRoot+ 'org/departmentadmin/groups/' + group.id + '/';\n    return (\n      <tr className={highlight ? 'tr-highlight' : ''} onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n        <td><Link to={newHref}>{group.name}</Link></td>\n        <td>{moment(group.created_at).fromNow()}</td>\n        <td onClick={this.props.showSetGroupQuotaDialog.bind(this, group.id)}>\n          {Utils.bytesToSize(group.quota)}{' '}\n          <span title=\"Edit Quota\" className={`fa fa-pencil-alt attr-action-icon ${highlight ? '' : 'vh'}`}></span>\n        </td>\n        <td className=\"cursor-pointer text-center\" onClick={this.props.showDeleteDepartDialog.bind(this, group)}>\n          <span className={`sf2-icon-delete action-icon  ${highlight ? '' : 'vh'}`} title=\"Delete\"></span>\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst GroupItemPropTypes = {\n  group: PropTypes.object.isRequired,\n  showSetGroupQuotaDialog: PropTypes.func.isRequired,\n  showDeleteDepartDialog: PropTypes.func.isRequired,\n};\n\nGroupItem.propTypes = GroupItemPropTypes;\n\nexport default OrgDepartmentsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { gettext, orgID } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\nimport UserSelect from '../user-select.js';\n\nconst propTypes = {\n  toggle: PropTypes.func.isRequired,\n  groupID:  PropTypes.string.isRequired,\n  onMemberChanged: PropTypes.func.isRequired\n};\n\nclass AddMemberDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: null,\n      errMessage: '',\n    };\n    this.Options = [];\n  }\n\n  handleSelectChange = (option) => {\n    this.setState({ selectedOption: option });\n    this.Options = [];\n  }\n\n  handleSubmit = () => {\n    if (!this.state.selectedOption) return;\n    const email = this.state.selectedOption.email;\n    this.refs.orgSelect.clearSelect();\n    this.setState({ errMessage: [] });\n    seafileAPI.orgAdminAddGroupMember(orgID, this.props.groupID, email).then((res) => {\n      this.setState({ selectedOption: null });\n      if (res.data.failed.length > 0) {\n        this.setState({ errMessage: res.data.failed[0].error_msg });\n      }\n      if (res.data.success.length > 0) {\n        this.props.onMemberChanged();\n        this.props.toggle();\n      }\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} toggle={this.props.toggle}>\n        <ModalHeader toggle={this.props.toggle}>{gettext('Add Member')}</ModalHeader>\n        <ModalBody>\n          <UserSelect\n            placeholder={gettext('Search users...')}\n            onSelectChange={this.handleSelectChange}\n            ref=\"orgSelect\"\n            isMulti={false}\n            className='org-add-member-select'\n          />\n          { this.state.errMessage && <p className=\"error\">{this.state.errMessage}</p> }\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.handleSubmit}>{gettext('Submit')}</Button>\n          <Button color=\"secondary\" onClick={this.props.toggle}>{gettext('Cancel')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nAddMemberDialog.propTypes = propTypes;\n\nexport default AddMemberDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { gettext, orgID } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst propTypes = {\n  member: PropTypes.object.isRequired,\n  groupID: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired,\n  onMemberChanged: PropTypes.func.isRequired\n};\n\nclass DeleteMemberDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  deleteMember = () => {\n    const userEmail = this.props.member.email;\n    seafileAPI.orgAdminDeleteGroupMember(orgID, this.props.groupID, userEmail).then((res) => {\n      if (res.data.success) {\n        this.props.onMemberChanged();\n        this.props.toggle();\n      }\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    let subtitle = gettext('Are you sure you want to delete {placeholder} ?');\n    subtitle = subtitle.replace('{placeholder}', '<span class=\"op-target\">' + Utils.HTMLescape(this.props.member.name) + '</span>');\n    return (\n      <Modal isOpen={true} toggle={this.props.toggle}>\n        <ModalHeader toggle={this.props.toggle}>{gettext('Delete Member')}</ModalHeader>\n        <ModalBody>\n          <div dangerouslySetInnerHTML={{__html: subtitle}}></div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.deleteMember}>{gettext('Delete')}</Button>\n          <Button color=\"secondary\" onClick={this.props.toggle}>{gettext('Cancel')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nDeleteMemberDialog.propTypes = propTypes;\n\nexport default DeleteMemberDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Form, FormGroup, Label } from 'reactstrap';\nimport { gettext, orgID } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\n\nconst propTypes = {\n  toggle: PropTypes.func.isRequired,\n  groupID: PropTypes.string.isRequired,\n  onRepoChanged: PropTypes.func.isRequired,\n};\n\nclass AddRepoDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      repoName: '',\n      errMessage: '',\n    };\n    this.newInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.newInput.focus();\n    this.newInput.setSelectionRange(0, 0);\n  }\n\n  handleSubmit = () => {\n    let isValid = this.validateName();\n    if (isValid) {\n      seafileAPI.orgAdminAddDepartmentRepo(orgID, this.props.groupID, this.state.repoName.trim()).then((res) => {\n        this.props.toggle();\n        this.props.onRepoChanged();\n      }).catch(error => {\n        let errorMsg = Utils.getErrorMsg(error);\n        this.setState({ errMessage: errorMsg });\n      });\n    }\n  }\n\n  validateName = () => {\n    let errMessage = '';\n    const name = this.state.repoName.trim();\n    if (!name.length) {\n      errMessage = gettext('Name is required');\n      this.setState({ errMessage: errMessage });\n      return false;\n    }\n    return true;\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      repoName: e.target.value,\n    });\n  }\n\n  handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      this.handleSubmit();\n      e.preventDefault();\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} toggle={this.props.toggle}>\n        <ModalHeader toggle={this.props.toggle}>{gettext('New Library')}</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label for=\"repoName\">{gettext('Name')}</Label>\n              <Input\n                id=\"repoName\"\n                onKeyPress={this.handleKeyPress}\n                value={this.state.repoName}\n                onChange={this.handleChange}\n                innerRef={input => {this.newInput = input;}}\n              />\n            </FormGroup>\n          </Form>\n          { this.state.errMessage && <p className=\"error\">{this.state.errMessage}</p> }\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.handleSubmit}>{gettext('Submit')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nAddRepoDialog.propTypes = propTypes;\n\nexport default AddRepoDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { gettext, orgID } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nclass DeleteRepoDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  deleteRepo = () => {\n    seafileAPI.orgAdminDeleteDepartmentRepo(orgID, this.props.groupID, this.props.repo.repo_id).then((res) => {\n      if (res.data.success) {\n        this.props.onRepoChanged();\n        this.props.toggle();\n      }\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    let subtitle = gettext('Are you sure you want to delete {placeholder} ?');\n    subtitle = subtitle.replace('{placeholder}', '<span class=\"op-target\">' + Utils.HTMLescape(this.props.repo.name) + '</span>');\n    return (\n      <Modal isOpen={true} toggle={this.props.toggle}>\n        <ModalHeader toggle={this.props.toggle}>{gettext('Delete Library')}</ModalHeader>\n        <ModalBody>\n          <div dangerouslySetInnerHTML={{__html: subtitle}}></div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.deleteRepo}>{gettext('Delete')}</Button>\n          <Button color=\"secondary\" onClick={this.props.toggle}>{gettext('Cancel')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nconst propTypes = {\n  repo: PropTypes.object.isRequired,\n  toggle: PropTypes.func.isRequired,\n  groupID: PropTypes.string.isRequired,\n  onRepoChanged: PropTypes.func.isRequired\n};\n\nDeleteRepoDialog.propTypes = propTypes;\n\nexport default DeleteRepoDialog;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Link } from '@reach/router';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils.js';\nimport toaster from '../../components/toast';\nimport MainPanelTopbar from './main-panel-topbar';\nimport ModalPortal from '../../components/modal-portal';\nimport RoleEditor from '../../components/select-editor/role-editor';\nimport AddDepartDialog from '../../components/dialog/org-add-department-dialog';\nimport AddMemberDialog from '../../components/dialog/org-add-member-dialog';\nimport DeleteMemberDialog from '../../components/dialog/org-delete-member-dialog';\nimport AddRepoDialog from '../../components/dialog/org-add-repo-dialog';\nimport DeleteRepoDialog from '../../components/dialog/org-delete-repo-dialog';\nimport DeleteDepartDialog from '../../components/dialog/org-delete-department-dialog';\nimport SetGroupQuotaDialog from '../../components/dialog/org-set-group-quota-dialog';\nimport { serviceURL, siteRoot, gettext, orgID, lang } from '../../utils/constants';\nimport '../../css/org-department-item.css';\n\nmoment.locale(lang);\n\nclass OrgDepartmentItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      groupName: '',\n      isItemFreezed: false,\n      ancestorGroups: [],\n      members: [],\n      deletedMember: {},\n      isShowAddMemberDialog: false,\n      showDeleteMemberDialog: false,\n      repos: [],\n      deletedRepo: {},\n      isShowAddRepoDialog: false,\n      showDeleteRepoDialog: false,\n      groups: [],\n      subGroupID: '',\n      subGroupName: '',\n      isShowAddDepartDialog: false,\n      showDeleteDepartDialog: false,\n      showSetGroupQuotaDialog: false,\n    };\n  }\n\n  componentDidMount() {\n    const groupID = this.props.groupID;\n    this.listOrgGroupRepo(groupID);\n    this.listOrgMembers(groupID);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.groupID !== nextProps.groupID) {\n      this.listOrgGroupRepo(nextProps.groupID);\n      this.listOrgMembers(nextProps.groupID);\n    }\n  }\n\n  listOrgGroupRepo = (groupID) => {\n    seafileAPI.orgAdminListGroupRepos(orgID, groupID).then(res => {\n      this.setState({ repos: res.data.libraries });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  listOrgMembers = (groupID) => {\n    seafileAPI.orgAdminListGroupInfo(orgID, groupID, true).then(res => {\n      this.setState({\n        members: res.data.members,\n        groups: res.data.groups,\n        ancestorGroups: res.data.ancestor_groups,\n        groupName: res.data.name,\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  listSubDepartGroups = (groupID) => {\n    seafileAPI.orgAdminListGroupInfo(orgID, groupID, true).then(res => {\n      this.setState({ groups: res.data.groups });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  toggleCancel = () => {\n    this.setState({\n      showDeleteMemberDialog: false,\n      showDeleteRepoDialog: false,\n      showDeleteDepartDialog: false,\n      showSetGroupQuotaDialog: false,\n    });\n  }\n\n  onSubDepartChanged = () => {\n    this.listSubDepartGroups(this.props.groupID);\n  }\n\n  onRepoChanged = () => {\n    this.listOrgGroupRepo(this.props.groupID);\n  }\n\n  onMemberChanged = () => {\n    this.listOrgMembers(this.props.groupID);\n  }\n\n  toggleItemFreezed = (isFreezed) => {\n    this.setState({ isItemFreezed: isFreezed });\n  }\n\n  showDeleteMemberDialog = (member) => {\n    this.setState({ showDeleteMemberDialog: true, deletedMember: member });\n  }\n\n  showDeleteRepoDialog = (repo) => {\n    this.setState({ showDeleteRepoDialog: true, deletedRepo: repo });\n  }\n\n  toggleAddRepoDialog = () => {\n    this.setState({ isShowAddRepoDialog: !this.state.isShowAddRepoDialog });\n  }\n\n  toggleAddMemberDialog = () => {\n    this.setState({ isShowAddMemberDialog: !this.state.isShowAddMemberDialog });\n  }\n\n  toggleAddDepartDialog = () => {\n    this.setState({ isShowAddDepartDialog: !this.state.isShowAddDepartDialog});\n  }\n\n  showDeleteDepartDialog = (subGroup) => {\n    this.setState({\n      showDeleteDepartDialog: true,\n      subGroupID: subGroup.id,\n      subGroupName: subGroup.name\n    });\n  }\n\n  showSetGroupQuotaDialog = (subGroupID) => {\n    this.setState({\n      showSetGroupQuotaDialog: true,\n      subGroupID: subGroupID\n    });\n  }\n\n  render() {\n    const { members, repos, groups } = this.state;\n    const groupID = this.props.groupID;\n    const topBtn = 'btn btn-secondary operation-item';\n    const topbarChildren = (\n      <Fragment>\n        {groupID &&\n          <button className={topBtn} title={gettext('New Sub-department')} onClick={this.toggleAddDepartDialog}>{gettext('New Sub-department')}</button>\n        }\n        {groupID &&\n          <button className={topBtn} title={gettext('Add Member')} onClick={this.toggleAddMemberDialog}>{gettext('Add Member')}</button>\n        }\n        {groupID &&\n          <button className={topBtn} onClick={this.toggleAddRepoDialog} title={gettext('New Library')}>{gettext('New Library')}</button>\n        }\n        {this.state.isShowAddMemberDialog && (\n          <ModalPortal>\n            <AddMemberDialog\n              toggle={this.toggleAddMemberDialog}\n              onMemberChanged={this.onMemberChanged}\n              groupID={groupID}\n            />\n          </ModalPortal>\n        )}\n        {this.state.isShowAddRepoDialog && (\n          <ModalPortal>\n            <AddRepoDialog\n              toggle={this.toggleAddRepoDialog}\n              onRepoChanged={this.onRepoChanged}\n              groupID={groupID}\n            />\n          </ModalPortal>\n        )}\n        {this.state.isShowAddDepartDialog && (\n          <ModalPortal>\n            <AddDepartDialog\n              onDepartChanged={this.onSubDepartChanged}\n              parentGroupID={groupID}\n              toggle={this.toggleAddDepartDialog}\n            />\n          </ModalPortal>\n        )}\n      </Fragment>\n    );\n\n    return (\n      <Fragment>\n        <MainPanelTopbar children={topbarChildren} />\n        <div className=\"main-panel-center flex-row h-100\">\n          <div className=\"cur-view-container o-auto\">\n            <div className=\"cur-view-path\">\n              <div className=\"fleft\">\n                <h3 className=\"sf-heading\">\n                  {groupID ?\n                    <Link to={siteRoot + 'org/departmentadmin/'}>{gettext('Departments')}</Link>\n                    : <span>{gettext('Departments')}</span>\n                  }\n                  {this.state.ancestorGroups.map(ancestor => {\n                    let newHref = siteRoot + 'org/departmentadmin/groups/' + ancestor.id + '/';\n                    return <span key={ancestor.id}>{' / '}<Link to={newHref}>{ancestor.name}</Link></span>;\n                  })}\n                  {groupID && <span>{' / '}{this.state.groupName}</span>}\n                </h3>\n              </div>\n            </div>\n\n            <div className=\"cur-view-subcontainer org-groups\">\n              <div className=\"cur-view-path\">\n                <div className=\"fleft\"><h3 className=\"sf-heading\">{gettext('Sub-departments')}</h3></div>\n              </div>\n              <div className=\"cur-view-content\">\n                {groups && groups.length > 0 ?\n                  <table>\n                    <thead>\n                      <tr>\n                        <th width=\"40%\">{gettext('Name')}</th>\n                        <th width=\"25%\">{gettext('Created At')}</th>\n                        <th width=\"20%\">{gettext('Quota')}</th>\n                        <th width=\"15%\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {groups.map((group, index) => {\n                        return(\n                          <React.Fragment key={group.id}>\n                            <GroupItem\n                              group={group}\n                              showDeleteDepartDialog={this.showDeleteDepartDialog}\n                              showSetGroupQuotaDialog={this.showSetGroupQuotaDialog}\n                            />\n                          </React.Fragment>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                  : <p className=\"no-group\">{gettext('No sub-departments')}</p>\n                }\n              </div>\n            </div>\n\n            <div className=\"cur-view-subcontainer org-members\">\n              <div className=\"cur-view-path\">\n                <div className=\"fleft\"><h3 className=\"sf-heading\">{gettext('Members')}</h3></div>\n              </div>\n              <div className=\"cur-view-content\">\n                {(!members || members.length === 0) ?\n                  <p className=\"no-member\">{gettext('No members')}</p> :\n                  <table>\n                    <thead>\n                      <tr>\n                        <th width=\"5%\"></th>\n                        <th width=\"50%\">{gettext('Name')}</th>\n                        <th width=\"15%\">{gettext('Role')}</th>\n                        <th width=\"30%\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {members.map((member, index) => {\n                        return (\n                          <React.Fragment key={index}>\n                            <MemberItem\n                              member={member}\n                              showDeleteMemberDialog={this.showDeleteMemberDialog}\n                              isItemFreezed={this.state.isItemFreezed}\n                              onMemberChanged={this.onMemberChanged}\n                              toggleItemFreezed={this.toggleItemFreezed}\n                              groupID={groupID}\n                            />\n                          </React.Fragment>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                }\n              </div>\n            </div>\n\n            <div className=\"cur-view-subcontainer org-libriries\">\n              <div className=\"cur-view-path\">\n                <div className=\"fleft\"><h3 className=\"sf-heading\">{gettext('Libraries')}</h3></div>\n              </div>\n              { repos.length > 0 ?\n                <div className=\"cur-view-content\">\n                  <table>\n                    <thead>\n                      <tr>\n                        <th width=\"5%\"></th>\n                        <th width=\"50%\">{gettext('Name')}</th>\n                        <th width=\"30%\">{gettext('Size')}</th>\n                        <th width=\"15%\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {repos.map((repo, index) => {\n                        return(\n                          <React.Fragment key={index}>\n                            <RepoItem repo={repo} showDeleteRepoDialog={this.showDeleteRepoDialog}/>\n                          </React.Fragment>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </div>\n                : <p className=\"no-libraty\">{gettext('No libraries')}</p>\n              }\n            </div>\n\n          </div>\n          <React.Fragment>\n            {this.state.showDeleteMemberDialog && (\n              <ModalPortal>\n                <DeleteMemberDialog\n                  toggle={this.toggleCancel}\n                  onMemberChanged={this.onMemberChanged}\n                  member={this.state.deletedMember}\n                  groupID={groupID}\n                />\n              </ModalPortal>\n            )}\n            {this.state.showDeleteRepoDialog && (\n              <ModalPortal>\n                <DeleteRepoDialog\n                  toggle={this.toggleCancel}\n                  onRepoChanged={this.onRepoChanged}\n                  repo={this.state.deletedRepo}\n                  groupID={groupID}\n                />\n              </ModalPortal>\n            )}\n            {this.state.showDeleteDepartDialog && (\n              <ModalPortal>\n                <DeleteDepartDialog\n                  toggle={this.toggleCancel}\n                  groupID={this.state.subGroupID}\n                  groupName={this.state.subGroupName}\n                  onDepartChanged={this.onSubDepartChanged}\n                />\n              </ModalPortal>\n            )}\n            {this.state.showSetGroupQuotaDialog && (\n              <ModalPortal>\n                <SetGroupQuotaDialog\n                  toggle={this.toggleCancel}\n                  groupID={this.state.subGroupID}\n                  onDepartChanged={this.onSubDepartChanged}\n                />\n              </ModalPortal>\n            )}\n          </React.Fragment>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nclass MemberItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlight: false,\n      showRoleMenu: false,\n    };\n    this.roles = ['Admin', 'Member'];\n  }\n\n  onMouseEnter = () => {\n    if (this.props.isItemFreezed) return;\n    this.setState({ highlight: true });\n  }\n\n  onMouseLeave = () => {\n    if (this.props.isItemFreezed) return;\n    this.setState({ highlight: false });\n  }\n\n  toggleMemberRoleMenu = () => {\n    this.setState({ showRoleMenu: !this.state.showRoleMenu });\n  }\n\n  onChangeUserRole = (role) => {\n    let isAdmin = role === 'Admin' ? true : false;\n    seafileAPI.orgAdminSetGroupMemberRole(orgID, this.props.groupID, this.props.member.email, isAdmin).then((res) => {\n      this.props.onMemberChanged();\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n    this.setState({\n      highlight: false,\n    });\n  }\n\n  render() {\n    const member = this.props.member;\n    const highlight = this.state.highlight;\n    let memberLink = serviceURL + '/org/useradmin/info/' + member.email + '/';\n    if (member.role === 'Owner') return null;\n    return (\n      <tr className={highlight ? 'tr-highlight' : ''} onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n        <td><img src={member.avatar_url} alt=\"member-header\" width=\"24\" className=\"avatar\"/></td>\n        <td><a href={memberLink}>{member.name}</a></td>\n        <td>\n          <RoleEditor\n            isTextMode={true}\n            isEditIconShow={highlight}\n            currentRole={member.role}\n            roles={this.roles}\n            onRoleChanged={this.onChangeUserRole}\n            toggleItemFreezed={this.props.toggleItemFreezed}\n          />\n        </td>\n        {!this.props.isItemFreezed ?\n          <td className=\"cursor-pointer text-center\" onClick={this.props.showDeleteMemberDialog.bind(this, member)}>\n            <span className={`sf2-icon-x3 action-icon ${highlight ? '' : 'vh'}`} title=\"Delete\"></span>\n          </td> : <td></td>\n        }\n      </tr>\n    );\n  }\n}\n\nconst MemberItemPropTypes = {\n  groupID: PropTypes.string.isRequired,\n  member: PropTypes.object.isRequired,\n  isItemFreezed: PropTypes.bool.isRequired,\n  onMemberChanged: PropTypes.func.isRequired,\n  showDeleteMemberDialog: PropTypes.func.isRequired,\n  toggleItemFreezed: PropTypes.func.isRequired,\n};\n\nMemberItem.propTypes = MemberItemPropTypes;\n\nclass RepoItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlight: false,\n    };\n  }\n\n  onMouseEnter = () => {\n    this.setState({ highlight: true });\n  }\n\n  onMouseLeave = () => {\n    this.setState({ highlight: false });\n  }\n\n  render() {\n    const repo = this.props.repo;\n    const highlight = this.state.highlight;\n    let iconUrl = Utils.getLibIconUrl(repo);\n    return (\n      <tr className={highlight ? 'tr-highlight' : ''} onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n        <td><img src={iconUrl} width=\"24\" alt={gettext('icon')}/></td>\n        <td>{repo.name}</td>\n        <td>{Utils.bytesToSize(repo.size)}{' '}</td>\n        <td className=\"cursor-pointer text-center\" onClick={this.props.showDeleteRepoDialog.bind(this, repo)}>\n          <span className={`sf2-icon-delete action-icon ${highlight ? '' : 'vh'}`} title=\"Delete\"></span>\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst RepoItemPropTypes = {\n  repo: PropTypes.object.isRequired,\n  showDeleteRepoDialog: PropTypes.func.isRequired,\n};\n\nRepoItem.propTypes = RepoItemPropTypes;\n\nclass GroupItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlight: false,\n    };\n  }\n\n  onMouseEnter = () => {\n    this.setState({ highlight: true });\n  }\n\n  onMouseLeave = () => {\n    this.setState({ highlight: false });\n  }\n\n  render() {\n    const group = this.props.group;\n    const highlight = this.state.highlight;\n    const newHref = siteRoot+ 'org/departmentadmin/groups/' + group.id + '/';\n    return (\n      <tr className={highlight ? 'tr-highlight' : ''} onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n        <td><Link to={newHref}>{group.name}</Link></td>\n        <td>{moment(group.created_at).fromNow()}</td>\n        <td onClick={this.props.showSetGroupQuotaDialog.bind(this, group.id)}>\n          {Utils.bytesToSize(group.quota)}{' '}\n          <span title=\"Edit Quota\" className={`fa fa-pencil-alt attr-action-icon ${highlight ? '' : 'vh'}`}></span>\n        </td>\n        <td className=\"cursor-pointer text-center\" onClick={this.props.showDeleteDepartDialog.bind(this, group)}>\n          <span className={`sf2-icon-delete action-icon ${highlight ? '' : 'vh'}`} title=\"Delete\"></span>\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst GroupItemPropTypes = {\n  group: PropTypes.object.isRequired,\n  groupID: PropTypes.string,\n  showSetGroupQuotaDialog: PropTypes.func.isRequired,\n  showDeleteDepartDialog: PropTypes.func.isRequired,\n  isSubdepartChanged: PropTypes.bool,\n};\n\nGroupItem.propTypes = GroupItemPropTypes;\n\n\nconst OrgDepartmentItemPropTypes = {\n  groupID: PropTypes.string,\n};\n\nOrgDepartmentItem.propTypes = OrgDepartmentItemPropTypes;\n\nexport default OrgDepartmentItem;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from '@reach/router';\nimport { siteRoot, gettext } from '../../utils/constants';\nimport MainPanelTopbar from './main-panel-topbar';\n\nclass OrgLogs extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  tabItemClick = (param) => {\n    this.props.tabItemClick(param);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <MainPanelTopbar/>\n        <div className=\"main-panel-center flex-row\">\n          <div className=\"cur-view-container\">\n            <div className=\"cur-view-path org-user-nav\">\n              <ul className=\"nav\">\n                <li className=\"nav-item\" onClick={() => this.tabItemClick('logadmin')}>\n                  <Link\n                    className={`nav-link ${this.props.currentTab === 'logadmin' ? 'active': ''}`}\n                    to={siteRoot + 'org/logadmin/'} title={gettext('File Access')}>{gettext('File Access')}\n                  </Link>\n                </li>\n                <li className=\"nav-item\" onClick={() => this.tabItemClick('file-update')}>\n                  <Link\n                    className={`nav-link ${this.props.currentTab === 'file-update' ? 'active': ''}`}\n                    to={siteRoot + 'org/logadmin/file-update/'} title={gettext('File Update')}>{gettext('File Update')}\n                  </Link>\n                </li>\n                <li className=\"nav-item\" onClick={() => this.tabItemClick('perm-audit')}>\n                  <Link\n                    className={`nav-link ${this.props.currentTab === 'perm-audit' ? 'active': ''}`}\n                    to={siteRoot + 'org/logadmin/perm-audit/'} title={gettext('Permission')}>{gettext('Permission')}\n                  </Link>\n                </li>\n              </ul>\n            </div>\n            {this.props.children}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst propTypes = {\n  currentTab: PropTypes.string.isRequired,\n  tabItemClick: PropTypes.func.isRequired,\n};\n\nOrgLogs.propTypes = propTypes;\n\nexport default OrgLogs;\n","import { lang } from '../utils/constants';\nimport moment from 'moment';\n\nmoment.locale(lang);\n\nclass OrgLogsFileAuditEvent {\n  constructor(object) {\n    this.ip = object.ip;\n    this.type = object.type;\n    this.device = object.device;\n    this.repo_id = object.repo_id;\n    this.repo_name = object.repo_name;\n    this.file_name = object.file_name;\n    this.file_path = object.file_path;\n    this.user_name = object.user_name;\n    this.user_email = object.user_email;\n    this.user_contact_email = object.user_contact_email;\n    this.time = moment(object.time).format('YYYY-MM-DD HH:mm:ss');\n  }\n}\n\nexport default OrgLogsFileAuditEvent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { siteRoot, gettext, lang } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../../components/toast';\nimport OrgLogsFileAuditEvent from '../../models/org-logs-file-audit';\nimport '../../css/org-logs.css';\n\nmoment.locale(lang);\n\nclass OrgLogsFileAudit extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n      pageNext: false,\n      eventList: [],\n      userSelected: '',\n      repoSelected: '',\n      isItemFreezed: false\n    };\n  }\n\n  componentDidMount() {\n    let page = this.state.page;\n    let email = this.state.userSelected;\n    let repoID = this.state.repoSelected;\n    this.initData(email, repoID, page);\n  }\n\n  initData = (email, repoID, page) => {\n    seafileAPI.orgAdminListFileAudit(email, repoID, page).then(res => {\n      let eventList = res.data.log_list.map(item => {\n        return new OrgLogsFileAuditEvent(item);\n      });\n\n      this.setState({\n        eventList: eventList,\n        pageNext: res.data.page_next,\n        page: res.data.page,\n        userSelected: res.data.user_selected,\n        repoSelected: res.data.repo_selected\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n\n  onChangePageNum = (e, num) => {\n    e.preventDefault();\n    let page = this.state.page;\n\n    if (num == 1) {\n      page = page + 1;\n    } else {\n      page = page - 1;\n    }\n    let email = this.state.userSelected;\n    let repoID = this.state.repoSelected;\n    this.initData(email, repoID, page);\n  }\n\n  filterUser = (userSelected) => {\n    this.setState({ userSelected: userSelected });\n  }\n\n  filterRepo = (repoSelected) => {\n    this.setState({ repoSelected: repoSelected });\n  }\n\n  render() {\n    let eventList = this.state.eventList;\n    return (\n      <div className=\"cur-view-content\">\n        {\n          (this.state.userSelected || this.state.repoSelected) &&\n          <React.Fragment>\n            {this.state.userSelected &&\n              <span className=\"audit-unselect-item\" onClick={this.filterUser.bind(this, null)}>\n                <span className=\"no-deco\">{this.state.userSelected}</span>{' ✖'}\n              </span>\n            }\n            {this.state.repoSelected &&\n              <span className=\"audit-unselect-item\" onClick={this.filterRepo.bind(this, null)}>\n                <span className=\"no-deco\">{this.state.repoSelected}</span>{' ✖'}\n              </span>\n            }\n          </React.Fragment>\n        }\n        <table>\n          <thead>\n            <tr>\n              <th width=\"24%\">{gettext('User')}</th>\n              <th width=\"10%\">{gettext('Type')}</th>\n              <th width=\"13%\">{gettext('IP')}</th>\n              <th width=\"17%\">{gettext('Date')}</th>\n              <th width=\"18%\">{gettext('Library')}</th>\n              <th width=\"18%\">{gettext('File')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {eventList.map((item, index) => {\n              return (\n                <FileAuditItem\n                  key={index}\n                  fileEvent={item}\n                  isItemFreezed={this.state.isItemFreezed}\n                  filterUser={this.filterUser}\n                  filterRepo={this.filterRepo}\n                  userSelected={this.state.userSelected}\n                  repoSelected={this.state.repoSelected}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n        <div className=\"paginator\">\n          {this.state.page != 1 && <a href=\"#\" onClick={(e) => this.onChangePageNum(e, -1)}>{gettext('Previous')}</a>}\n          {(this.state.page != 1 && this.state.pageNext) && <span> | </span>}\n          {this.state.pageNext && <a href=\"#\" onClick={(e) => this.onChangePageNum(e, 1)}>{gettext('Next')}</a>}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst propTypes = {\n  filterUser: PropTypes.func.isRequired,\n  filterRepo: PropTypes.func.isRequired,\n  isItemFreezed: PropTypes.bool.isRequired,\n  fileEvent: PropTypes.object.isRequired,\n  userSelected: PropTypes.string,\n  repoSelected: PropTypes.string,\n};\n\nclass FileAuditItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlight: false,\n      showMenu: false,\n      isItemMenuShow: false,\n      userDropdownOpen: false,\n      repoDropdownOpen: false,\n    };\n  }\n\n  onMouseEnter = () => {\n    if (!this.props.isItemFreezed) {\n      this.setState({\n        showMenu: true,\n        highlight: true,\n      });\n    }\n  }\n\n  onMouseLeave = () => {\n    if (!this.props.isItemFreezed) {\n      this.setState({\n        showMenu: false,\n        highlight: false\n      });\n    }\n  }\n\n  toggleUserDropdown = () => {\n    this.setState({ userDropdownOpen: !this.state.userDropdownOpen });\n  }\n\n  renderUser = (fileEvent) => {\n    if (!fileEvent.user_email) {\n      return gettext('Anonymous User');\n    }\n\n    return (\n      <span>\n        <a href={siteRoot + 'org/useradmin/info/' + fileEvent.user_email + '/'}>{fileEvent.user_name}</a>{' '}\n        <Dropdown size='sm' isOpen={this.state.userDropdownOpen} toggle={this.toggleUserDropdown}\n          className={this.state.highlight ? '' : 'vh'} tag=\"span\">\n          <DropdownToggle tag=\"i\" className=\"sf-dropdown-toggle sf2-icon-caret-down\"></DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem onClick={this.props.filterUser.bind(this, fileEvent.user_email)}>\n              {gettext('Only Show')}{' '}\n              <span className=\"font-weight-bold\">{fileEvent.user_name}</span>\n            </DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n      </span>\n    );\n\n  }\n\n  renderType = (type) => {\n    if (type.indexOf('web') != -1) {\n      type = 'web';\n    }\n    if (type.indexOf('api') != -1) {\n      type = 'api';\n    }\n    if (type.indexOf('share-link') != -1) {\n      type = 'share link';\n    }\n    return type;\n  }\n\n  toggleRepoDropdown = () => {\n    this.setState({ repoDropdownOpen: !this.state.repoDropdownOpen });\n  }\n\n  renderRepo = (fileEvent) => {\n    let repoName = 'Deleted';\n    if (fileEvent.repo_name) {\n      repoName = fileEvent.repo_name;\n    }\n    return (\n      <span>\n        <span>{repoName}</span>\n        { fileEvent.repo_name &&\n          <Dropdown size='sm' isOpen={this.state.repoDropdownOpen} toggle={this.toggleRepoDropdown}\n            className={this.state.highlight ? '' : 'vh'} >\n            <DropdownToggle tag=\"i\" className=\"sf-dropdown-toggle sf2-icon-caret-down\"></DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem size='sm' onClick={this.props.filterRepo.bind(this, fileEvent.repo_name)}>\n                {gettext('Only Show')}{' '}<span className=\"font-weight-bold\">{fileEvent.repo_name}</span></DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        }\n      </span>\n    );\n  }\n\n  render() {\n    let { fileEvent } = this.props;\n    if (this.props.userSelected && fileEvent.user_email !== this.props.userSelected ) {\n      return null;\n    } else if (this.props.repoSelected && fileEvent.repo_name !== this.props.repoSelected) {\n      return null;\n    } else {\n      return (\n        <tr className={this.state.highlight ? 'tr-highlight' : ''}\n          onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n          <td>{this.renderUser(fileEvent)}</td>\n          <td>{this.renderType(fileEvent.type)}</td>\n          <td>{fileEvent.ip}</td>\n          <td>{moment(fileEvent.time).format('YYYY-MM-DD HH:mm:ss')}</td>\n          <td>{this.renderRepo(fileEvent)}</td>\n          <td><span title={fileEvent.file_path}>{fileEvent.file_name}</span></td>\n        </tr>\n      );\n    }\n  }\n}\n\nFileAuditItem.propTypes = propTypes;\n\nexport default OrgLogsFileAudit;\n","import { lang } from '../utils/constants';\nimport moment from 'moment';\n\nmoment.locale(lang);\n\nclass OrgLogsFileUpdateEvent {\n  constructor(object) {\n    this.repo_id = object.repo_id;\n    this.description = object.description;\n    this.repo_name = object.repo_name;\n    this.user_name = object.user_name;\n    this.user_email = object.user_email;\n    this.repo_encrypted = object.repo_encrypted;\n    this.repo_commit_id = object.repo_commit_id;\n    this.user_contact_email = object.user_contact_email;\n    this.time = moment(object.time).format('YYYY-MM-DD HH:mm:ss');\n  }\n}\n\nexport default OrgLogsFileUpdateEvent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { gettext } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  commitID: PropTypes.string.isRequired,\n  toggleCancel: PropTypes.func.isRequired,\n};\n\nclass FileUpdateDetailDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: '',\n      renamed: [],\n      deldir: [],\n      modified: [],\n      newdir: [],\n      newfile: [],\n      removed: [],\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.orgAdminGetFileUpdateDetail(this.props.repoID, this.props.commitID).then(res => {\n      this.setState({\n        time: res.data.date_time,\n        renamed: this.state.renamed.concat(res.data.renamed),\n        deldir: this.state.deldir.concat(res.data.deldir),\n        modified: this.state.modified.concat(res.data.modified),\n        newdir: this.state.newdir.concat(res.data.newdir),\n        newfile: this.state.newfile.concat(res.data.new),\n        removed: this.state.removed.concat(res.data.removed),\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  renderContentItem = (items) => {\n    let con = '';\n    con += '<ul class=\"list-group list-group-flush\">';\n    for (var i = 0, len = items.length; i < len; i++) {\n      con += '<li class=\"list-group-item\">' + items[i] + '</li>';\n    }\n    con += '</ul>';\n    return {__html: con};\n  }\n\n  renderContent = () => {\n    if (this.state.newfile.length > 0) {\n      return (\n        <div>\n          <h4>{gettext('New files')}</h4>\n          <p>{this.state.time}</p>\n          <div dangerouslySetInnerHTML= {this.renderContentItem(this.state.newfile)} />\n        </div>\n      );\n    }\n\n    if (this.state.removed.length > 0) {\n      return (\n        <div>\n          <h4>{gettext('Deleted files')}</h4>\n          <p>{this.state.time}</p>\n          <div dangerouslySetInnerHTML= {this.renderContentItem(this.state.removed)} />\n        </div>\n      );\n    }\n\n    if (this.state.renamed.length > 0) {\n      return (\n        <div>\n          <h4>{gettext('Renamed or Moved files')}</h4>\n          <p>{this.state.time}</p>\n          <div dangerouslySetInnerHTML= {this.renderContentItem(this.state.renamed)} />\n        </div>\n      );\n    }\n\n    if (this.state.modified.length > 0) {\n      return (\n        <div>\n          <h4>{gettext('Modified files')}</h4>\n          <p>{this.state.time}</p>\n          <div dangerouslySetInnerHTML= {this.renderContentItem(this.state.modified)} />\n        </div>\n      );\n    }\n\n    if (this.state.newdir.length > 0) {\n      return (\n        <div>\n          <h4>{gettext('New directories')}</h4>\n          <p>{this.state.time}</p>\n          <div dangerouslySetInnerHTML= {this.renderContentItem(this.state.newdir)} />\n        </div>\n      );\n    }\n\n    if (this.state.deldir.length > 0) {\n      return (\n        <div>\n          <h4>{gettext('Deleted directories')}</h4>\n          <p>{this.state.time}</p>\n          <div dangerouslySetInnerHTML= {this.renderContentItem(this.state.deldir)} />\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} toggle={this.props.toggleCancel}>\n        <ModalHeader toggle={this.props.toggleCancel}>\n          {gettext('Modification Details')}\n        </ModalHeader>\n        <ModalBody>\n          {this.renderContent()}\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nFileUpdateDetailDialog.propTypes = propTypes;\n\nexport default FileUpdateDetailDialog;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { siteRoot, gettext, lang } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../../components/toast';\nimport OrgLogsFileUpdateEvent from '../../models/org-logs-file-update';\nimport ModalPortal from '../../components/modal-portal';\nimport FileUpdateDetailDialog from '../../components/dialog/org-logs-file-update-detail';\nimport '../../css/org-logs.css';\n\nmoment.locale(lang);\n\nclass OrgLogsFileUpdate extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n      pageNext: false,\n      eventList: [],\n      userSelected: '',\n      repoSelected: '',\n      isItemFreezed: false,\n      showDetails: false,\n      repoID: '',\n      commitID: ''\n    };\n  }\n\n  componentDidMount() {\n    let page = this.state.page;\n    let email = this.state.userSelected;\n    let repoID = this.state.repoSelected;\n    this.initData(email, repoID, page);\n  }\n\n  initData = (email, repoID, page) => {\n    seafileAPI.orgAdminListFileUpdate(email, repoID, page).then(res => {\n      let eventList = res.data.log_list.map(item => {\n        return new OrgLogsFileUpdateEvent(item);\n      });\n      this.setState({\n        eventList: eventList,\n        pageNext: res.data.page_next,\n        page: res.data.page,\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  onChangePageNum = (e, num) => {\n    e.preventDefault();\n    let page = this.state.page;\n\n    if (num == 1) {\n      page = page + 1;\n    } else {\n      page = page - 1;\n    }\n    let email = this.state.userSelected;\n    let repoID = this.state.repoSelected;\n    this.initData(email, repoID, page);\n  }\n\n  toggleCancelDetail = () => {\n    this.setState({\n      showDetails: !this.state.showDetails\n    });\n  }\n\n  onDetails = (e, fileEvent) => {\n    e.preventDefault();\n    this.setState({\n      showDetails: !this.state.showDetails,\n      repoID: fileEvent.repo_id,\n      commitID: fileEvent.repo_commit_id\n    });\n  }\n\n  filterUser = (userSelected) => {\n    this.setState({ userSelected: userSelected });\n  }\n\n  filterRepo = (repoSelected) => {\n    this.setState({ repoSelected: repoSelected });\n  }\n\n  render() {\n    let eventList = this.state.eventList;\n    return (\n      <div className=\"cur-view-content\">\n        {\n          (this.state.userSelected || this.state.repoSelected) &&\n          <React.Fragment>\n            {this.state.userSelected &&\n              <span className=\"audit-unselect-item\" onClick={this.filterUser.bind(this, null)}>\n                <span className=\"no-deco\">{this.state.userSelected}</span>{' ✖'}\n              </span>\n            }\n            {this.state.repoSelected &&\n              <span className=\"audit-unselect-item\" onClick={this.filterRepo.bind(this, null)}>\n                <span className=\"no-deco\">{this.state.repoSelected}</span>{' ✖'}\n              </span>\n            }\n          </React.Fragment>\n        }\n        <table>\n          <thead>\n            <tr>\n              <th width=\"25%\">{gettext('User')}</th>\n              <th width=\"17%\">{gettext('Date')}</th>\n              <th width=\"25%\">{gettext('Library')}</th>\n              <th width=\"33%\">{gettext('Action')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {eventList.map((item, index) => {\n              return (\n                <FileUpdateItem\n                  key={index}\n                  fileEvent={item}\n                  isItemFreezed={this.state.isItemFreezed}\n                  onDetails={this.onDetails}\n                  filterUser={this.filterUser}\n                  filterRepo={this.filterRepo}\n                  userSelected={this.state.userSelected}\n                  repoSelected={this.state.repoSelected}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n        <div className=\"paginator\">\n          {this.state.page != 1 && <a href=\"#\" onClick={(e) => this.onChangePageNum(e, -1)}>{gettext('Previous')}</a>}\n          {(this.state.page != 1 && this.state.pageNext) && <span> | </span>}\n          {this.state.pageNext && <a href=\"#\" onClick={(e) => this.onChangePageNum(e, 1)}>{gettext('Next')}</a>}\n        </div>\n        {this.state.showDetails &&\n          <ModalPortal>\n            <FileUpdateDetailDialog\n              repoID={this.state.repoID}\n              commitID={this.state.commitID}\n              toggleCancel={this.toggleCancelDetail}\n            />\n          </ModalPortal>\n        }\n      </div>\n    );\n  }\n}\n\nconst propTypes = {\n  filterUser: PropTypes.func.isRequired,\n  filterRepo: PropTypes.func.isRequired,\n  onDetails: PropTypes.func.isRequired,\n  userSelected: PropTypes.string.isRequired,\n  repoSelected: PropTypes.string.isRequired,\n  isItemFreezed: PropTypes.bool.isRequired,\n};\n\n\nclass FileUpdateItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlight: false,\n      showMenu: false,\n      isItemMenuShow: false,\n      userDropdownOpen: false,\n      repoDropdownOpen: false,\n    };\n  }\n\n  onMouseEnter = () => {\n    if (!this.props.isItemFreezed) {\n      this.setState({\n        showMenu: true,\n        highlight: true,\n      });\n    }\n  }\n\n  onMouseLeave = () => {\n    if (!this.props.isItemFreezed) {\n      this.setState({\n        showMenu: false,\n        highlight: false\n      });\n    }\n  }\n\n  toggleUserDropdown = () => {\n    this.setState({ userDropdownOpen: !this.state.userDropdownOpen });\n  }\n\n  renderUser = (fileEvent) => {\n    if (!fileEvent.user_email) {\n      return gettext('Anonymous User');\n    }\n\n    return (\n      <span>\n        <a href={siteRoot + 'org/useradmin/info/' + fileEvent.user_email + '/'}>{fileEvent.user_name}</a>{' '}\n        <Dropdown size='sm' isOpen={this.state.userDropdownOpen} toggle={this.toggleUserDropdown}\n          className={this.state.highlight ? '' : 'vh'} tag=\"span\">\n          <DropdownToggle tag=\"i\" className=\"sf-dropdown-toggle sf2-icon-caret-down\"></DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem onClick={this.props.filterUser.bind(this, fileEvent.user_email)}>\n              {gettext('Only Show')}{' '}<span className=\"font-weight-bold\">{fileEvent.user_name}</span>\n            </DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n      </span>\n    );\n  }\n\n  toggleRepoDropdown = () => {\n    this.setState({ repoDropdownOpen: !this.state.repoDropdownOpen });\n  }\n\n  renderRepo = (fileEvent) => {\n    let repoName = 'Deleted';\n    if (fileEvent.repo_name) {\n      repoName = fileEvent.repo_name;\n    }\n    return (\n      <span>\n        <span>{repoName}</span>\n        { fileEvent.repo_name &&\n          <Dropdown size='sm' isOpen={this.state.repoDropdownOpen} toggle={this.toggleRepoDropdown}\n            className={this.state.highlight ? '' : 'vh'} >\n            <DropdownToggle tag=\"i\" className=\"sf-dropdown-toggle sf2-icon-caret-down\"></DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem size='sm' onClick={this.props.filterRepo.bind(this, fileEvent.repo_name)}>\n                {gettext('Only Show')}{' '}\n                <span className=\"font-weight-bold\">{fileEvent.repo_name}</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        }\n      </span>\n    );\n  }\n\n  renderAction = (fileEvent) => {\n    if (fileEvent.repo_encrypted || !fileEvent.repo_id) {\n      return <td>{fileEvent.description}</td>;\n    }\n\n    return (\n      <td>{fileEvent.description}\n        <a className=\"font-weight-normal text-muted ml-1\" href='#'\n          onClick={(e) => this.props.onDetails(e, fileEvent)}>{gettext('Details')}</a>\n      </td>\n    );\n  }\n\n  render() {\n    let { fileEvent } = this.props;\n    if (this.props.userSelected && fileEvent.user_email !== this.props.userSelected ) {\n      return null;\n    } else if (this.props.repoSelected && fileEvent.repo_name !== this.props.repoSelected) {\n      return null;\n    } else {\n      return (\n        <tr className={this.state.highlight ? 'tr-highlight' : ''}\n          onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n          <td>{this.renderUser(fileEvent)}</td>\n          <td>{moment(fileEvent.time).format('YYYY-MM-DD HH:mm:ss')}</td>\n          <td>{this.renderRepo(fileEvent)}</td>\n          {this.renderAction(fileEvent)}\n        </tr>\n      );\n    }\n  }\n}\n\nFileUpdateItem.propTypes = propTypes;\n\nexport default OrgLogsFileUpdate;\n","import { lang } from '../utils/constants';\nimport moment from 'moment';\n\nmoment.locale(lang);\n\nclass OrgLogsPermAuditEvent {\n  constructor(object) {\n    this.from_user_name = object.from_user_name;\n    this.from_user_email = object.from_user_email;\n    this.from_user_contact_email = object.from_user_contact_email;\n    this.to_user_email = object.to_user_email;\n    this.to_user_name = object.to_user_name;\n    this.to_user_contact_email = object.to_user_contact_email;\n    this.to_group_name = object.to_group_name;\n    this.to_group_id = object.to_group_id;\n    this.type = object.type;\n    this.repo_id = object.repo_id;\n    this.repo_name = object.repo_name;\n    this.folder_name = object.folder_name;\n    this.folder_path = object.folder_path;\n    this.time = moment(object.time).format('YYYY-MM-DD HH:mm:ss');\n    this.permission = object.permission;\n  }\n}\n\nexport default OrgLogsPermAuditEvent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { siteRoot, gettext, lang } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../../components/toast';\nimport OrgLogsFilePermEvent from '../../models/org-logs-perm-audit';\nimport '../../css/org-logs.css';\n\nmoment.locale(lang);\n\nclass OrgLogsFileUpdate extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n      pageNext: false,\n      eventList: [],\n      userSelected: '',\n      repoSelected: '',\n      isItemFreezed: false\n    };\n  }\n\n  componentDidMount() {\n    let page = this.state.page;\n    let email = this.state.userSelected;\n    let repoID = this.state.repoSelected;\n    this.initData(email, repoID, page);\n  }\n\n  initData = (email, repoID, page) => {\n    seafileAPI.orgAdminListPermAudit(email, repoID, page).then(res => {\n      let eventList = res.data.log_list.map(item => {\n        return new OrgLogsFilePermEvent(item);\n      });\n\n      this.setState({\n        eventList: eventList,\n        pageNext: res.data.page_next,\n        page: res.data.page,\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  onChangePageNum = (e, num) => {\n    e.preventDefault();\n    let page = this.state.page;\n\n    if (num == 1) {\n      page = page + 1;\n    } else {\n      page = page - 1;\n    }\n    this.initData(page);\n  }\n\n  filterUser = (userSelected) => {\n    this.setState({ userSelected: userSelected });\n  }\n\n  render() {\n    let eventList = this.state.eventList;\n    return (\n      <div className=\"cur-view-content\">\n        {this.state.userSelected &&\n          <span className=\"audit-unselect-item\" onClick={this.filterUser.bind(this, null)}>\n            <span className=\"no-deco\">{this.state.userSelected}</span>{' ✖'}\n          </span>\n        }\n        <table>\n          <thead>\n            <tr>\n              <th width=\"18%\">{gettext('Share From')}</th>\n              <th width=\"15%\">{gettext('Share To')}</th>\n              <th width=\"8%\">{gettext('Actions')}</th>\n              <th width=\"13%\">{gettext('Permission')}</th>\n              <th width=\"15%\">{gettext('Library')}</th>\n              <th width=\"15%\">{gettext('Folder')}</th>\n              <th width=\"16%\">{gettext('Date')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {eventList.map((item, index) => {\n              return (\n                <PermAuditItem\n                  key={index}\n                  permEvent={item}\n                  isItemFreezed={this.state.isItemFreezed}\n                  filterUser={this.filterUser}\n                  userSelected={this.state.userSelected}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n        <div className=\"paginator\">\n          {this.state.page != 1 && <a href=\"#\" onClick={(e) => this.onChangePageNum(e, -1)}>{gettext('Previous')}</a>}\n          {(this.state.page != 1 && this.state.pageNext) && <span> | </span>}\n          {this.state.pageNext && <a href=\"#\" onClick={(e) => this.onChangePageNum(e, 1)}>{gettext('Next')}</a>}\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst propTypes = {\n  filterUser: PropTypes.func.isRequired,\n  isItemFreezed: PropTypes.bool.isRequired,\n  userSelected: PropTypes.string.isRequired,\n  permEvent: PropTypes.object.isRequired,\n};\n\nclass PermAuditItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      highlight: false,\n      showMenu: false,\n      isItemMenuShow: false,\n      userDropdownOpen: false,\n    };\n  }\n\n  onMouseEnter = () => {\n    if (!this.props.isItemFreezed) {\n      this.setState({\n        showMenu: true,\n        highlight: true,\n      });\n    }\n  }\n\n  onMouseLeave = () => {\n    if (!this.props.isItemFreezed) {\n      this.setState({\n        showMenu: false,\n        highlight: false\n      });\n    }\n  }\n\n  renderFromUser = (permEvent) => {\n    if (!permEvent.from_user_email) {\n      return gettext('Anonymous User');\n    }\n    return (\n      <span>\n        <a href={siteRoot + 'org/useradmin/info/' + permEvent.from_user_email + '/'}>{permEvent.from_user_name}</a>{' '}\n        <Dropdown size='sm' isOpen={this.state.userDropdownOpen} toggle={this.toggleUserDropdown}\n          className={this.state.highlight ? '' : 'vh'} tag=\"span\">\n          <DropdownToggle tag=\"i\" className=\"sf-dropdown-toggle sf2-icon-caret-down\"></DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem onClick={this.props.filterUser.bind(this, permEvent.from_user_email)}>\n              {gettext('Only Show')}{' '}\n              <span className=\"font-weight-bold\">{permEvent.from_user_name}</span>\n            </DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n      </span>\n    );\n  }\n\n  toggleUserDropdown = () => {\n    this.setState({ userDropdownOpen: !this.state.userDropdownOpen });\n  }\n\n  renderToUser = (permEvent) => {\n    if (permEvent.type.indexOf('public') != -1) {\n      return <a href={siteRoot + 'org/'}>{gettext('Organization')}</a>;\n    }\n\n    if (permEvent.type.indexOf('group') != -1) {\n      if (permEvent.to_group_name) {\n        return <a href={siteRoot + 'org/groupadmin/' + permEvent.to_group_id + '/'}>{permEvent.to_group_name}</a>;\n      }\n      return 'Deleted';\n    }\n\n    if (permEvent.type.indexOf('user') != -1) {\n      return <a href={siteRoot + 'org/useradmin/info/' + permEvent.to_user_email + '/'}>{permEvent.to_user_name}</a>;\n    }\n\n  }\n\n  renderType = (type) => {\n    if (type.indexOf('add') != -1) {\n      type = 'Add';\n    }\n    if (type.indexOf('modify') != -1) {\n      type = 'Modify';\n    }\n    if (type.indexOf('delete') != -1) {\n      type = 'Delete';\n    }\n    return type;\n  }\n\n  renderRepo = (permEvent) => {\n    let repoName = 'Deleted';\n    if (permEvent.repo_name) {\n      repoName = permEvent.repo_name;\n    }\n    return repoName;\n  }\n\n  renderFolder = (name) => {\n    let folderName = '/';\n    if (name) {\n      folderName = name;\n    }\n    return folderName;\n  }\n\n  render() {\n    let { permEvent } = this.props;\n    if (this.props.userSelected && permEvent.from_user_email !== this.props.userSelected ) {\n      return null;\n    } else {\n      return (\n        <tr className={this.state.highlight ? 'tr-highlight' : ''} onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n          <td>{this.renderFromUser(permEvent)}</td>\n          <td>{this.renderToUser(permEvent)}</td>\n          <td>{this.renderType(permEvent.type)}</td>\n          <td>{Utils.sharePerms(permEvent.permission)}</td>\n          <td>{this.renderRepo(permEvent)}</td>\n          <td>{this.renderFolder(permEvent.folder_name)}</td>\n          <td>{moment(permEvent.time).format('YYYY-MM-DD HH:mm:ss')}</td>\n        </tr>\n      );\n    }\n  }\n}\n\nPermAuditItem.propTypes = propTypes;\n\nexport default OrgLogsFileUpdate;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from '@reach/router';\nimport { siteRoot } from '../../utils/constants';\nimport SidePanel from './side-panel';\nimport OrgUsers from './org-users-users';\nimport OrgAdmins from './org-users-admins';\nimport OrgUserProfile from './org-user-profile';\nimport OrgUserRepos from './org-user-repos';\nimport OrgUserSharedRepos from './org-user-shared-repos';\nimport OrgGroups from './org-groups';\nimport OrgGroupInfo from './org-group-info';\nimport OrgGroupRepos from './org-group-repos';\nimport OrgGroupMembers from './org-group-members';\nimport OrgLibraries from './org-libraries';\nimport OrgInfo from './org-info';\nimport OrgLinks from './org-links';\nimport OrgDepartments from './org-departments';\nimport OrgDepartmentsList from './org-departments-list';\nimport OrgDepartmentItem from './org-department-item';\nimport OrgLogs from './org-logs';\nimport OrgLogsFileAudit from './org-logs-file-audit';\nimport OrgLogsFileUpdate from './org-logs-file-update';\nimport OrgLogsPermAudit from './org-logs-perm-audit';\n\nimport '../../css/layout.css';\nimport '../../css/toolbar.css';\n\nclass Org extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSidePanelClosed: false,\n      currentTab: 'users'\n    };\n  }\n\n  componentDidMount() {\n    let href = window.location.href.split('/');\n    let currentTab = href[href.length - 2];\n\n    if (location.href.indexOf(`${siteRoot}org/useradmin`) != -1) {\n      currentTab = 'users';\n    }\n    if (location.href.indexOf(`${siteRoot}org/groupadmin`) != -1) {\n      currentTab = 'groupadmin';\n    }\n    if (location.href.indexOf(`${siteRoot}org/departmentadmin`) != -1) {\n      currentTab = 'departmentadmin';\n    }\n    this.setState({currentTab: currentTab});\n  }\n\n  onCloseSidePanel = () => {\n    this.setState({isSidePanelClosed: !this.state.isSidePanelClosed});\n  }\n\n  tabItemClick = (param) => {\n    this.setState({currentTab: param});\n  }\n\n  render() {\n    let { isSidePanelClosed, currentTab } = this.state;\n    return (\n      <div id=\"main\">\n        <SidePanel isSidePanelClosed={isSidePanelClosed} onCloseSidePanel={this.onCloseSidePanel} currentTab={currentTab} tabItemClick={this.tabItemClick}/>\n        <div className=\"main-panel o-hidden\">\n          <Router className=\"reach-router\">\n            <OrgInfo path={siteRoot + 'org/orgmanage'}/>\n            <OrgUsers path={siteRoot + 'org/useradmin'} />\n            <OrgAdmins path={siteRoot + 'org/useradmin/admins/'} />\n            <OrgUserProfile path={siteRoot + 'org/useradmin/info/:email/'} />\n            <OrgUserRepos path={siteRoot + 'org/useradmin/info/:email/repos/'} />\n            <OrgUserSharedRepos path={siteRoot + 'org/useradmin/info/:email/shared-repos/'} />\n            <OrgGroups path={siteRoot + 'org/groupadmin'} />\n            <OrgGroupInfo path={siteRoot + 'org/groupadmin/:groupID/'} />\n            <OrgGroupRepos path={siteRoot + 'org/groupadmin/:groupID/repos/'} />\n            <OrgGroupMembers path={siteRoot + 'org/groupadmin/:groupID/members/'} />\n            <OrgLibraries path={siteRoot + 'org/repoadmin'}/>\n            <OrgLinks path={siteRoot + 'org/publinkadmin'}/>\n            <OrgDepartments path={siteRoot + 'org/departmentadmin'}>\n              <OrgDepartmentsList path='/'/>\n              <OrgDepartmentItem path='groups/:groupID'/>\n            </OrgDepartments>\n            <OrgLogs path={siteRoot + 'org/logadmin'} currentTab={currentTab} tabItemClick={this.tabItemClick}>\n              <OrgLogsFileAudit path='/' />\n              <OrgLogsFileUpdate path='file-update' />\n              <OrgLogsPermAudit path='perm-audit' />\n            </OrgLogs>\n          </Router>\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Org />,\n  document.getElementById('wrapper')\n);\n"],"sourceRoot":""}